{
    "version": "https://jsonfeed.org/version/1",
    "title": "你好，世界",
    "subtitle": null,
    "icon": "https://github.com/ICAN1999/ICAN1999.github.io.git/images/favicon.ico",
    "description": "想进大厂的小白",
    "home_page_url": "https://github.com/ICAN1999/ICAN1999.github.io.git",
    "items": [
        {
            "id": "https://github.com/ICAN1999/ICAN1999.github.io.git/crawler/%E7%88%AC%E5%8F%96%E8%B1%86%E7%93%A3TOP250/",
            "url": "https://github.com/ICAN1999/ICAN1999.github.io.git/crawler/%E7%88%AC%E5%8F%96%E8%B1%86%E7%93%A3TOP250/",
            "title": "爬取豆瓣TOP250",
            "date_published": "2021-01-20T02:31:10.734Z",
            "content_html": "<p>看完小甲鱼的爬取豆瓣 TOP250 的视频后，自己对代码进行了改写。</p>\n<p><a id=\"more\"></a></p>\n<h1 id=\"准备工作\"><a class=\"anchor\" href=\"#准备工作\">#</a> 准备工作</h1>\n<h2 id=\"观察\"><a class=\"anchor\" href=\"#观察\">#</a> 观察</h2>\n<p>要分自己观察爬取每个网页的信息，以免在后面的操作出现失误，比如：有的电影没有写上主演甚至主演就是一个省略号等一些情况（主要它的信息没有填写完整），这样更有利于我们编写代码。进入这个链接<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tb3ZpZS5kb3ViYW4uY29tL3RvcDI1MA==\"> https://movie.douban.com/top250</span>，然后可以发现每一页总共有 25 部电影，总共有十页，然后我们进入第二页时，发现链接变为<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tb3ZpZS5kb3ViYW4uY29tP3N0YXJ0PTI1JmFtcDtmaWx0ZXI9\"> https://movie.douban.com?start=25&amp;filter=</span>，进入到下一个页面时 start 的值就增加 25 直到 225，第一页 start 的值为 0。</p>\n<h2 id=\"尝试获取页面源代码\"><a class=\"anchor\" href=\"#尝试获取页面源代码\">#</a> 尝试获取页面源代码</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>url <span class=\"token operator\">=</span> <span class=\"token string\">\"https://movie.douban.com/top250\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>r <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>r<span class=\"token punctuation\">.</span>encoding <span class=\"token operator\">=</span> r<span class=\"token punctuation\">.</span>apparent_encoding</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>status_code<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>soup <span class=\"token operator\">=</span> BeautifulSoup<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">,</span> <span class=\"token string\">\"html.parser\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>soup<span class=\"token punctuation\">.</span>prettify<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>结果却只得到 http 的状态码为 418，这种情况通常百度搜索，一般来说状态码为 200 时，才请求成功。肯定是服务器拒绝了爬虫的请求，一般来说有一下几个方法：</p>\n<h2 id=\"请求标头\"><a class=\"anchor\" href=\"#请求标头\">#</a> 请求标头</h2>\n<p>设置 get 或者 request 方法（这个方法第一个参数是 method，表示 7 种请求的方式，第二个参数才是 url）里的 headers 参数。这个参数的类型为字典，键为 &quot;User-Agent&quot;，值为当前网站提供你所用浏览器类型等信息的标识。&lt;br&gt;</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>url <span class=\"token operator\">=</span> <span class=\"token string\">\"https://movie.douban.com/top250\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>r <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span>headers<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'User-Agent'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'python-requests/2.24.0'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Accept-Encoding'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'gzip, deflate'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Accept'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'*/*'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Connection'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'keep-alive'</span><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>这是没有设置这个参数的情况，网站通过 &quot;User-Agent&quot; 这个标识一下就认出这是爬虫程序并拒绝访问。当我们设置这个参数后情况就不一样了。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>url <span class=\"token operator\">=</span> <span class=\"token string\">\"https://movie.douban.com/top250\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>hd <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'User-Agent'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.121 Safari/537.36 Edg/85.0.564.63'</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>r <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>hd<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span>headers<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'User-Agent'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.121 Safari/537.36 Edg/85.0.564.63'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Accept-Encoding'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'gzip, deflate'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Accept'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'*/*'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Connection'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'keep-alive'</span><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>有了这个标识之后，网站向我们响应（也就是 response 对象）得到 request 请求里的 headers 就能看到 &quot;User-Agent&quot;, 这样爬虫就可以隐藏自己的身份伪装成浏览器，让网站以为是人点击访问。</p>\n<h2 id=\"代理-ip\"><a class=\"anchor\" href=\"#代理-ip\">#</a> 代理 ip</h2>\n<p>设置 proxies 使用代理服务器。使用爬虫爬取一个网站时，通常会频繁的访问该网站，网站会检测某一段时间某个 ip 的访问次数，如果访问次数过多，它会禁止你的访问。所有我们可以设置一些代理服务器来帮我们工作，每隔一段时间切换一个 ip，这样就不会出现禁止访问的现象。以上这两种方法我们可以使用 random 库的 choice 方法随机选择 'User-Agent'、'http' 或者 'https'。</p>\n<h2 id=\"cookie-认证\"><a class=\"anchor\" href=\"#cookie-认证\">#</a> cookie 认证</h2>\n<p>设置上述两个方法里的 cookies 参数，对应 Request 里的 cookie，这个可以检查网页对应链接的 Network 获得 Cookie。爬虫程序有了认证 cookie，服务器就会将它重定向到初始请求的资源，以免爬虫被引导到登录界面。如果多次之后还是失败的话，那就得考虑其他反爬虫机制的方法了。</p>\n<h2 id=\"如何得到-10-这个数字\"><a class=\"anchor\" href=\"#如何得到-10-这个数字\">#</a> 如何得到 10 这个数字</h2>\n<p>找到页面下方 10 这个数字，鼠标左边点击检查，然后浏览器就会出现网站页面的源代码，并且还会自动跳转到 10 这个标签 &lt;a href=&quot;?start=225&amp;filter=&quot;&gt;10&lt;/a&gt;，这 1~10 都是 &lt; a &gt; 超链接标签。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>url <span class=\"token operator\">=</span> <span class=\"token string\">\"https://movie.douban.com/top250\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>hd <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'User-Agent'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.121 Safari/537.36 Edg/85.0.564.63'</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>r <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>hd<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>r<span class=\"token punctuation\">.</span>encoding <span class=\"token operator\">=</span> r<span class=\"token punctuation\">.</span>apparent_encoding</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>soup <span class=\"token operator\">=</span> BeautifulSoup<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">,</span> <span class=\"token string\">\"html.parser\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>depth <span class=\"token operator\">=</span> soup<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span> href<span class=\"token operator\">=</span><span class=\"token string\">\"?start=225&amp;filter=\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>depth<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>结果为 10，但是类型为 str，这里要做一个强制类型转换。<br />\n还有另一种方法，比较麻烦又愚蠢而且容易懵，但我还是有个小细节想强调一下。可以看出 &lt;a&gt; 和 &lt; span &gt; 这两个标签都是 &lt; div &gt; 中，而它们又是同级标签，那么我们先找到 &lt; a href=&quot;?start=225&amp;filter=&quot;&gt;10&lt;/a &gt; 下的 &lt; span &gt; 标签，然后再平行遍历到 &lt; a href=&quot;?start=225&amp;filter=&quot;&gt;10&lt;/a&gt;。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>url <span class=\"token operator\">=</span> <span class=\"token string\">\"https://movie.douban.com/top250\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>hd <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'User-Agent'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.121 Safari/537.36 Edg/85.0.564.63'</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>r <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>hd<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>r<span class=\"token punctuation\">.</span>encoding <span class=\"token operator\">=</span> r<span class=\"token punctuation\">.</span>apparent_encoding</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>soup <span class=\"token operator\">=</span> BeautifulSoup<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">,</span> <span class=\"token string\">\"html.parser\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>depth <span class=\"token operator\">=</span> soup<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token string\">'span'</span><span class=\"token punctuation\">,</span> class_<span class=\"token operator\">=</span><span class=\"token string\">'next'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>previous_sibling</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>depth<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>结果却什么也没有，但是好像输出的空白比以往多了一行，原来是标签之间多了一个换行符，现在还真看不出来。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span>depth <span class=\"token operator\">=</span> soup<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token string\">'span'</span><span class=\"token punctuation\">,</span> class_<span class=\"token operator\">=</span><span class=\"token string\">'next'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>depth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&lt;</span>link href<span class=\"token operator\">=</span><span class=\"token string\">\"?start=25&amp;amp;filter=\"</span> rel<span class=\"token operator\">=</span><span class=\"token string\">\"next\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">&lt;</span>a href<span class=\"token operator\">=</span><span class=\"token string\">\"?start=25&amp;amp;filter=\"</span><span class=\"token operator\">></span>后页<span class=\"token operator\">&amp;</span>gt<span class=\"token punctuation\">;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>link<span class=\"token operator\">></span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>那再加一个 previous_sibling 就可以得到 10，这里同样要类型转换。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>depth <span class=\"token operator\">=</span> soup<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token string\">'span'</span><span class=\"token punctuation\">,</span> class_<span class=\"token operator\">=</span><span class=\"token string\">'next'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>previous_sibling<span class=\"token punctuation\">.</span>previous_sibling</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>depth<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"爬取网页\"><a class=\"anchor\" href=\"#爬取网页\">#</a> 爬取网页</h1>\n<p>有了以上的准备我们就可以爬取网页的源代码了，废话不多说，直接上代码解释。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 爬取网页代码</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_html</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\"># 使用代理</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    iplist <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"121.232.148.225\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"123.101.207.185\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"69.195.157.162\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"175.44.109.246\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"175.42.128.246\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\"># random 库的 choice 方法随机选择 ip</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    proxies <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"http\"</span><span class=\"token punctuation\">:</span> random<span class=\"token punctuation\">.</span>choice<span class=\"token punctuation\">(</span>iplist<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    headers <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token string\">'User-Agent'</span><span class=\"token punctuation\">:</span> 'Mozilla<span class=\"token operator\">/</span><span class=\"token number\">5.0</span> <span class=\"token punctuation\">(</span>Windows NT <span class=\"token number\">10.0</span><span class=\"token punctuation\">;</span> Win64<span class=\"token punctuation\">;</span> x64<span class=\"token punctuation\">)</span> AppleWebKit<span class=\"token operator\">/</span><span class=\"token number\">537.36</span> \\</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">(</span>KABUL<span class=\"token punctuation\">,</span> like Gecko<span class=\"token punctuation\">)</span> Chrome<span class=\"token operator\">/</span><span class=\"token number\">85.0</span><span class=\"token number\">.4183</span><span class=\"token number\">.121</span> Safari<span class=\"token operator\">/</span><span class=\"token number\">537.36</span> Edg<span class=\"token operator\">/</span><span class=\"token number\">85.0</span><span class=\"token number\">.564</span><span class=\"token number\">.63</span>'<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token string\">'cookie'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'bid=mDUxIx660Vg; douban-fav-remind=1; ll=\"118300\"; '</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                  <span class=\"token string\">'_vwo_uuid_v2=D0D095AA577CA9982D96BF53E5B82D902|19baada46789b48f67201d5ad830a0f6; '</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                  <span class=\"token string\">'__yadk_uid=gAC153pUujwGBubBMhpUqg8osqjO7FfD; '</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                  <span class=\"token string\">'__utmz=30149280.1601027331.15.8.utmcsr=accounts.douban.com|utmccn=('</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                  <span class=\"token string\">'referral)|utmcmd=referral|utmcct=/passport/login; '</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                  <span class=\"token string\">'__utmz=223695111.1601028074.12.5.utmcsr=accounts.douban.com|utmccn=('</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                  <span class=\"token string\">'referral)|utmcmd=referral|utmcct=/passport/login; push_noty_num=0; push_doumail_num=0; ct=y; '</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                  <span class=\"token string\">'ap_v=0,6.0; __utmc=30149280; __utmc=223695111; '</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                  <span class=\"token string\">'__utma=30149280.846971982.1594690041.1601194295.1601199438.18; '</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                  <span class=\"token string\">'__utma=223695111.2022617817.1595329698.1601194295.1601199438.15; __utmb=223695111.0.10.1601199438; '</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                  <span class=\"token string\">'_pk_ses.100001.4cf6=*; _pk_ref.100001.4cf6=%5B%22%22%2C%22%22%2C1601199438%2C%22https%3A%2F'</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                  <span class=\"token string\">'%2Faccounts.douban.com%2Fpassport%2Flogin%3Fredir%3Dhttps%253A%252F%252Fmovie.douban.com'</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                  <span class=\"token string\">'%252Ftop250%22%5D; dbcl2=\"216449506:1anURmdR9nE\"; ck=LxNQ; __utmt=1; __utmv=30149280.21644; '</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                  <span class=\"token string\">'douban-profile-remind=1; '</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                  <span class=\"token string\">'__gads=ID=c502f7a27a33facd-22f60957b9c300e3:T=1601201244:S=ALNI_MbN9wSYWbg2k5f3fWucwuXpORbGNw; '</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                  <span class=\"token string\">'__utmb=30149280.20.10.1601199438; '</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                  <span class=\"token string\">'_pk_id.100001.4cf6=d35078454df4f375.1595329083.15.1601201286.1601197192.'</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    res <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>headers<span class=\"token punctuation\">,</span> proxies<span class=\"token operator\">=</span>proxies<span class=\"token punctuation\">,</span> timeout<span class=\"token operator\">=</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">return</span> res</pre></td></tr></table></figure><p>定义一个获取网页源代码的函数，返回 Response 对象。这里有两种方法直接设置 cookie，一是添加到 headers，二是设置 cookies 参数。设置 timeout，timeout=([连接超时时间], [读取超时时间])，这里我们设置连接超时时间以免爬虫卡死又没有报错。</p>\n<h1 id=\"解析网页\"><a class=\"anchor\" href=\"#解析网页\">#</a> 解析网页</h1>\n<p>解析网页是爬虫程序中最重要的一部分。我们已经得到了链接为<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tb3ZpZS5kb3ViYW4uY29tL3RvcDI1MD9zdGFydD0w\"> https://movie.douban.com/top250?start=0</span> 下的网页源代码，然后我们就要解析 HTML 代码。使用 BeautifulSoup 库将它熬制成一碗美味汤，使用自带的 html.parser 解析器，对自定义的 get_html (url) 函数返回的 Response 对象的 text 属性进行解析就可以得到源代码了。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>soup <span class=\"token operator\">=</span> BeautifulSoup<span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">,</span> <span class=\"token string\">'html.parser'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>剩下来的 9 页方法上基本差不多，注意一下个别信息缺失的电影，之后弄个循环就可以了。每部电影基本上有名称、评分、影评人数、导演、主演、上映时间、来自哪个国家和是什么类型的电影，还有对电影的描述。总共有这么多内容，接下就要用爬虫把它们一个个提取出来。定义一个函数，将提取出来的所有信息全部保存到一个列表，返回值为列表。</p>\n<p>先上图，接下来我们要爬取信息大部分都在这个标签中。</p>\n<p><img data-src=\"/images/1.jpg\" alt=\"alt\" /></p>\n<h2 id=\"电影名\"><a class=\"anchor\" href=\"#电影名\">#</a> 电影名</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>movies <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 找到 div 标签</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>targets <span class=\"token operator\">=</span> soup<span class=\"token punctuation\">.</span>find_all<span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">,</span> class_<span class=\"token operator\">=</span><span class=\"token string\">\"hd\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">for</span> each <span class=\"token keyword\">in</span> targets<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token comment\"># div 标签下的 a 标签的下 span 标签的属性 next 才是电影名称，这</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        三个标签是包含关系</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        movies<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>each<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">.</span>span<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token comment\"># 为确保程序正常运行，这里添加一个异常处理。</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">continue</span></pre></td></tr></table></figure><p>鼠标箭头放在电影名称上，然后左键就可以看到对应的标签，这个标签刚好是 &lt;div class=&quot;hd&quot;&gt; 标签中的 &lt; a href=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tb3ZpZS5kb3ViYW4uY29tL3N1YmplY3QvMTI5MjA1Mi8=\">https://movie.douban.com/subject/1292052/</span>&quot;class &gt; 的第一个标签，因此我们先找到 &lt;div class=&quot;hd&quot;&gt; 再找到 &lt; span class=&quot;title&quot;&gt; 肖申克的救赎 &lt;/span &gt; 这个标签，最后提取内容。使用 find_all 方法查找所有符合这个要求的标签并返回一个集合，然后将集合中的每个元素添加到列表中。</p>\n<h2 id=\"评分\"><a class=\"anchor\" href=\"#评分\">#</a> 评分</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ranks <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>targets <span class=\"token operator\">=</span> soup<span class=\"token punctuation\">.</span>find_all<span class=\"token punctuation\">(</span><span class=\"token string\">\"span\"</span><span class=\"token punctuation\">,</span> class_<span class=\"token operator\">=</span><span class=\"token string\">\"rating_num\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">for</span> each <span class=\"token keyword\">in</span> targets<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        ranks<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>each<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">continue</span></pre></td></tr></table></figure><p>评分跟电影名都是类似这样的方法就可以得到。</p>\n<h2 id=\"导演\"><a class=\"anchor\" href=\"#导演\">#</a> 导演</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>director <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>targets <span class=\"token operator\">=</span> soup<span class=\"token punctuation\">.</span>find_all<span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">,</span> class_<span class=\"token operator\">=</span><span class=\"token string\">\"bd\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">for</span> each <span class=\"token keyword\">in</span> targets<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token comment\"># split 方法分割字符串并返回分割后字符串的列表</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token comment\"># lstrip 去除左侧指定字符串</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        director<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>each<span class=\"token punctuation\">.</span>p<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'\\xa0\\xa0\\xa0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>lstrip<span class=\"token punctuation\">(</span><span class=\"token string\">'导演: '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>         <span class=\"token keyword\">continue</span></pre></td></tr></table></figure><p>老方法找到导演的内容所在的标签，它在 &lt;div class=&quot;bd&quot;&gt; 里的 &lt; p class &gt; 中，找到之后发现我们想要的信息都在这里面。接下来就要将 &lt; p &gt; 中的内容提取出来，内容为字符串类型，这里用 split 就整个字符串进行分割返回一个列表，然后选择正确的字符串并且用 strip 去掉无关的内容。</p>\n<h2 id=\"主演\"><a class=\"anchor\" href=\"#主演\">#</a> 主演</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>leading_actor <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>targets <span class=\"token operator\">=</span> soup<span class=\"token punctuation\">.</span>find_all<span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">,</span> class_<span class=\"token operator\">=</span><span class=\"token string\">\"bd\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">for</span> each <span class=\"token keyword\">in</span> targets<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        leading_actor<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>each<span class=\"token punctuation\">.</span>p<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'\\xa0\\xa0\\xa0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'主演:'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">if</span> movies<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"肖申克的救赎\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    leading_actor<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token number\">24</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"无\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">if</span> movies<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"大闹天宫\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    leading_actor<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"无\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    leading_actor<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"无\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">if</span> movies<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"美国往事\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    leading_actor<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"无\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">if</span> movies<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"阳光姐妹淘\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    leading_actor<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token number\">23</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"无\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">if</span> movies<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"七武士\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    leading_actor<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"无\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">if</span> movies<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"模仿游戏\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    leading_actor<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"无\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    leading_actor<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"无\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">if</span> movies<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"罗生门\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    leading_actor<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"无\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>总共有 10 页，有些页的电影会缺少主演，如果这里没有 try、finally 异常处理的话，程序将会在这里报错：IndexError: list index out of range，意思索引超出范围，因为在 append () 的这个括号里有不符合这个分割的字符串，分割之后并没有这个列表。</p>\n<p><img data-src=\"/images/2.jpg\" alt=\"我这里\" /></p>\n<p>就比如第一页最后一个电影《触不可及》，不能以 &quot;主演:&quot; 分割，返回不了一个列表也就没有 split (&quot;主演:&quot;)[1] 这个索引了。之后在每次循环找到对应的缺失页后就往列表里插入缺失的信息，保证 10 次循环的每次 leading_actor 的长度都为 25，因为每页总共 25 电影。</p>\n<h2 id=\"评价人数\"><a class=\"anchor\" href=\"#评价人数\">#</a> 评价人数</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>people <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>targets <span class=\"token operator\">=</span> soup<span class=\"token punctuation\">.</span>find_all<span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">,</span> class_<span class=\"token operator\">=</span><span class=\"token string\">\"star\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">for</span> each <span class=\"token keyword\">in</span> targets<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        people<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>each<span class=\"token punctuation\">.</span>contents<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>rstrip<span class=\"token punctuation\">(</span><span class=\"token string\">\"人评价\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">continue</span></pre></td></tr></table></figure><p>将 &lt;div&gt; 标签下的的所有儿子节点（contents）索引为 7 的 text 转化为 str 并去掉 &quot;人评价&quot;，最后存入列表。</p>\n<h2 id=\"电影描述\"><a class=\"anchor\" href=\"#电影描述\">#</a> 电影描述</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 电影描述，最后两页分别有两篇电影没有描述</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>sentence <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>targets <span class=\"token operator\">=</span> soup<span class=\"token punctuation\">.</span>find_all<span class=\"token punctuation\">(</span><span class=\"token string\">\"span\"</span><span class=\"token punctuation\">,</span> class_<span class=\"token operator\">=</span><span class=\"token string\">\"inq\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">for</span> each <span class=\"token keyword\">in</span> targets<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        sentence<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>each<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">if</span> sentence<span class=\"token punctuation\">[</span><span class=\"token number\">22</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"天使保护事件始末。\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    sentence<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"无\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    sentence<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token number\">14</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"无\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">if</span> sentence<span class=\"token punctuation\">[</span><span class=\"token number\">22</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"生病的E.T.皮肤的颜色就像柿子饼。\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    sentence<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"无\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    sentence<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token number\">22</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"无\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>以缺失页的最后一个电影描述为标记，在列表中插入 “无”，代表该电影没有写上描述，保证每次循环 sentence 的长度为 25。</p>\n<h2 id=\"上映时间\"><a class=\"anchor\" href=\"#上映时间\">#</a> 上映时间</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>year <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>targets <span class=\"token operator\">=</span> soup<span class=\"token punctuation\">.</span>find_all<span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">,</span> class_<span class=\"token operator\">=</span><span class=\"token string\">\"bd\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">for</span> each <span class=\"token keyword\">in</span> targets<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>     <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        year<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>each<span class=\"token punctuation\">.</span>p<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'\\xa0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token string\">\"(中国大陆)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">if</span> movies<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"大闹天宫\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        year<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"1961 / 1964 / 1978 / 2004\"</span></pre></td></tr></table></figure><p>利用这个异常处理去掉《天书奇谭》年份里的字符串 &quot;中国大陆&quot;。还有一部电影《大闹天宫》的上映年份分别为 1961、1964、1978、2004 这四年，只需修改该网页下第一个 year [0] 的值就行。</p>\n<h2 id=\"国家\"><a class=\"anchor\" href=\"#国家\">#</a> 国家</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>country <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>targets <span class=\"token operator\">=</span> soup<span class=\"token punctuation\">.</span>find_all<span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">,</span> class_<span class=\"token operator\">=</span><span class=\"token string\">\"bd\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">for</span> each <span class=\"token keyword\">in</span> targets<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        country<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>each<span class=\"token punctuation\">.</span>p<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'\\xa0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">continue</span></pre></td></tr></table></figure><h2 id=\"类型\"><a class=\"anchor\" href=\"#类型\">#</a> 类型</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>kinds <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>targets <span class=\"token operator\">=</span> soup<span class=\"token punctuation\">.</span>find_all<span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">,</span> class_<span class=\"token operator\">=</span><span class=\"token string\">\"bd\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">for</span> each <span class=\"token keyword\">in</span> targets<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        kinds<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>each<span class=\"token punctuation\">.</span>p<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'\\xa0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">continue</span></pre></td></tr></table></figure><p>这两个跟之前的是同一个道理。</p>\n<h2 id=\"整合数据\"><a class=\"anchor\" href=\"#整合数据\">#</a> 整合数据</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>result <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>length <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>movies<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    result<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>movies<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> ranks<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> director<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> leading_actor<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>people<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> sentence<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> year<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> country<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> kinds<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">return</span> result</pre></td></tr></table></figure><p>length 的值为 25，有的电影信息缺失了，也是这些储存电影信息的列表不为 25，在这里将会报 IndexError，所以得确保这些储存信息的列表每次循环之后的长度都为 25，利用循环将每部电影的信息全都保存到 result 里，并作为函数返回值返回。</p>\n<h1 id=\"保存数据\"><a class=\"anchor\" href=\"#保存数据\">#</a> 保存数据</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">save_to_excel</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\"># 实例化一个对象，相当于创建一个 Excel 文档</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    wb <span class=\"token operator\">=</span> Workbook<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\"># 激活 Sheet</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    ws <span class=\"token operator\">=</span> wb<span class=\"token punctuation\">.</span>active</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\"># 设置标题</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    ws<span class=\"token punctuation\">[</span><span class=\"token string\">\"A1\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"名称\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    ws<span class=\"token punctuation\">[</span><span class=\"token string\">\"B1\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"评分\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    ws<span class=\"token punctuation\">[</span><span class=\"token string\">\"c1\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"导演\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    ws<span class=\"token punctuation\">[</span><span class=\"token string\">'d1'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"主演\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    ws<span class=\"token punctuation\">[</span><span class=\"token string\">\"e1\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"评价人数\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    ws<span class=\"token punctuation\">[</span><span class=\"token string\">\"f1\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"电影描述\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    ws<span class=\"token punctuation\">[</span><span class=\"token string\">\"g1\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"年份\"</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    ws<span class=\"token punctuation\">[</span><span class=\"token string\">\"h1\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"国家\"</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    ws<span class=\"token punctuation\">[</span><span class=\"token string\">\"i1\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"类型\"</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token comment\"># 信息添加 ws 中</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">for</span> each <span class=\"token keyword\">in</span> result<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        ws<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>each<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token comment\"># 保存文件</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    wb<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token string\">\"豆瓣电影TOP250.xlsx\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>这里用到 python 的第三方模块 openpyxl，通过 pip 命令安装。</p>\n<h1 id=\"主函数\"><a class=\"anchor\" href=\"#主函数\">#</a> 主函数</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    host <span class=\"token operator\">=</span> <span class=\"token string\">\"https://movie.douban.com/top250\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    res <span class=\"token operator\">=</span> get_html<span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    depth <span class=\"token operator\">=</span> find_pages<span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    result <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>depth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        url <span class=\"token operator\">=</span> host <span class=\"token operator\">+</span> <span class=\"token string\">'/?start='</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">25</span> <span class=\"token operator\">*</span> i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        res <span class=\"token operator\">=</span> get_html<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        result<span class=\"token punctuation\">.</span>extend<span class=\"token punctuation\">(</span>parser_html<span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    save_to_excel<span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>利用 find_pages (res) 获得网页页数，循环 depth 次，每次访问一个链接并获取内容，然后添加到 result 中，最后保存为 excel 格式的文件。</p>\n<h1 id=\"程序代码\"><a class=\"anchor\" href=\"#程序代码\">#</a> 程序代码</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> bs4 <span class=\"token keyword\">import</span> BeautifulSoup</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> random</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">from</span> openpyxl <span class=\"token keyword\">import</span> Workbook</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_html</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\"># 使用代理</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    iplist <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"121.232.148.225\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"123.101.207.185\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"69.195.157.162\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"175.44.109.246\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"175.42.128.246\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    proxies <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"http\"</span><span class=\"token punctuation\">:</span> random<span class=\"token punctuation\">.</span>choice<span class=\"token punctuation\">(</span>iplist<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    headers <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token string\">'User-Agent'</span><span class=\"token punctuation\">:</span> 'Mozilla<span class=\"token operator\">/</span><span class=\"token number\">5.0</span> <span class=\"token punctuation\">(</span>Windows NT <span class=\"token number\">10.0</span><span class=\"token punctuation\">;</span> Win64<span class=\"token punctuation\">;</span> x64<span class=\"token punctuation\">)</span> AppleWebKit<span class=\"token operator\">/</span><span class=\"token number\">537.36</span> \\</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">(</span>KABUL<span class=\"token punctuation\">,</span> like Gecko<span class=\"token punctuation\">)</span> Chrome<span class=\"token operator\">/</span><span class=\"token number\">85.0</span><span class=\"token number\">.4183</span><span class=\"token number\">.121</span> Safari<span class=\"token operator\">/</span><span class=\"token number\">537.36</span> Edg<span class=\"token operator\">/</span><span class=\"token number\">85.0</span><span class=\"token number\">.564</span><span class=\"token number\">.63</span>'<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token string\">'cookie'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'bid=mDUxIx660Vg; douban-fav-remind=1; ll=\"118300\"; '</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                  <span class=\"token string\">'_vwo_uuid_v2=D0D095AA577CA9982D96BF53E5B82D902|19baada46789b48f67201d5ad830a0f6; '</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                  <span class=\"token string\">'__yadk_uid=gAC153pUujwGBubBMhpUqg8osqjO7FfD; '</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                  <span class=\"token string\">'__utmz=30149280.1601027331.15.8.utmcsr=accounts.douban.com|utmccn=('</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                  <span class=\"token string\">'referral)|utmcmd=referral|utmcct=/passport/login; '</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                  <span class=\"token string\">'__utmz=223695111.1601028074.12.5.utmcsr=accounts.douban.com|utmccn=('</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                  <span class=\"token string\">'referral)|utmcmd=referral|utmcct=/passport/login; push_noty_num=0; push_doumail_num=0; ct=y; '</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                  <span class=\"token string\">'ap_v=0,6.0; __utmc=30149280; __utmc=223695111; '</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                  <span class=\"token string\">'__utma=30149280.846971982.1594690041.1601194295.1601199438.18; '</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                  <span class=\"token string\">'__utma=223695111.2022617817.1595329698.1601194295.1601199438.15; __utmb=223695111.0.10.1601199438; '</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                  <span class=\"token string\">'_pk_ses.100001.4cf6=*; _pk_ref.100001.4cf6=%5B%22%22%2C%22%22%2C1601199438%2C%22https%3A%2F'</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                  <span class=\"token string\">'%2Faccounts.douban.com%2Fpassport%2Flogin%3Fredir%3Dhttps%253A%252F%252Fmovie.douban.com'</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                  <span class=\"token string\">'%252Ftop250%22%5D; dbcl2=\"216449506:1anURmdR9nE\"; ck=LxNQ; __utmt=1; __utmv=30149280.21644; '</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                  <span class=\"token string\">'douban-profile-remind=1; '</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                  <span class=\"token string\">'__gads=ID=c502f7a27a33facd-22f60957b9c300e3:T=1601201244:S=ALNI_MbN9wSYWbg2k5f3fWucwuXpORbGNw; '</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                  <span class=\"token string\">'__utmb=30149280.20.10.1601199438; '</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                  <span class=\"token string\">'_pk_id.100001.4cf6=d35078454df4f375.1595329083.15.1601201286.1601197192.'</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    res <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>headers<span class=\"token punctuation\">,</span> proxies<span class=\"token operator\">=</span>proxies<span class=\"token punctuation\">,</span> timeout<span class=\"token operator\">=</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token comment\"># res = requests.get(url, headers=headers)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">return</span> res</pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">parser_html</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    soup <span class=\"token operator\">=</span> BeautifulSoup<span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">,</span> <span class=\"token string\">'html.parser'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token comment\"># 电影名</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    movies <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    targets <span class=\"token operator\">=</span> soup<span class=\"token punctuation\">.</span>find_all<span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">,</span> class_<span class=\"token operator\">=</span><span class=\"token string\">\"hd\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token keyword\">for</span> each <span class=\"token keyword\">in</span> targets<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            movies<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>each<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">.</span>span<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token comment\"># 评分</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    ranks <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    targets <span class=\"token operator\">=</span> soup<span class=\"token punctuation\">.</span>find_all<span class=\"token punctuation\">(</span><span class=\"token string\">\"span\"</span><span class=\"token punctuation\">,</span> class_<span class=\"token operator\">=</span><span class=\"token string\">\"rating_num\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token keyword\">for</span> each <span class=\"token keyword\">in</span> targets<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>            ranks<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>each<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        <span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>            <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token comment\"># 导演</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    director <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    targets <span class=\"token operator\">=</span> soup<span class=\"token punctuation\">.</span>find_all<span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">,</span> class_<span class=\"token operator\">=</span><span class=\"token string\">\"bd\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token keyword\">for</span> each <span class=\"token keyword\">in</span> targets<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>            director<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>each<span class=\"token punctuation\">.</span>p<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'\\xa0\\xa0\\xa0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>lstrip<span class=\"token punctuation\">(</span><span class=\"token string\">'导演: '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        <span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>            <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    <span class=\"token comment\"># 主演</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    leading_actor <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    targets <span class=\"token operator\">=</span> soup<span class=\"token punctuation\">.</span>find_all<span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">,</span> class_<span class=\"token operator\">=</span><span class=\"token string\">\"bd\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token keyword\">for</span> each <span class=\"token keyword\">in</span> targets<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>            leading_actor<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>each<span class=\"token punctuation\">.</span>p<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'\\xa0\\xa0\\xa0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'主演:'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>        <span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>            <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    <span class=\"token keyword\">if</span> movies<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"肖申克的救赎\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        leading_actor<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token number\">24</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"无\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    <span class=\"token keyword\">if</span> movies<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"大闹天宫\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>        leading_actor<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"无\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>        leading_actor<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"无\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>    <span class=\"token keyword\">if</span> movies<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"美国往事\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>        leading_actor<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"无\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    <span class=\"token keyword\">if</span> movies<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"阳光姐妹淘\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>        leading_actor<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token number\">23</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"无\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>    <span class=\"token keyword\">if</span> movies<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"七武士\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>        leading_actor<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"无\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    <span class=\"token keyword\">if</span> movies<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"模仿游戏\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>        leading_actor<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"无\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>        leading_actor<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"无\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    <span class=\"token keyword\">if</span> movies<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"罗生门\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>        leading_actor<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"无\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>    <span class=\"token comment\"># 评价人数</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>    people <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>    targets <span class=\"token operator\">=</span> soup<span class=\"token punctuation\">.</span>find_all<span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">,</span> class_<span class=\"token operator\">=</span><span class=\"token string\">\"star\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>    <span class=\"token keyword\">for</span> each <span class=\"token keyword\">in</span> targets<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>            people<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>each<span class=\"token punctuation\">.</span>contents<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>rstrip<span class=\"token punctuation\">(</span><span class=\"token string\">\"人评价\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>        <span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>            <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>    <span class=\"token comment\"># 电影描述，最后两页分别有两篇电影没有描述</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>    sentence <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>    targets <span class=\"token operator\">=</span> soup<span class=\"token punctuation\">.</span>find_all<span class=\"token punctuation\">(</span><span class=\"token string\">\"span\"</span><span class=\"token punctuation\">,</span> class_<span class=\"token operator\">=</span><span class=\"token string\">\"inq\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>    <span class=\"token keyword\">for</span> each <span class=\"token keyword\">in</span> targets<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>            sentence<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>each<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>        <span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>            <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>    <span class=\"token keyword\">if</span> sentence<span class=\"token punctuation\">[</span><span class=\"token number\">22</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"天使保护事件始末。\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>        sentence<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"无\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>        sentence<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token number\">14</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"无\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>    <span class=\"token keyword\">if</span> sentence<span class=\"token punctuation\">[</span><span class=\"token number\">22</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"生病的E.T.皮肤的颜色就像柿子饼。\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>        sentence<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"无\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>        sentence<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token number\">22</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"无\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>    <span class=\"token comment\"># 年份</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>    year <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>    targets <span class=\"token operator\">=</span> soup<span class=\"token punctuation\">.</span>find_all<span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">,</span> class_<span class=\"token operator\">=</span><span class=\"token string\">\"bd\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>    <span class=\"token keyword\">for</span> each <span class=\"token keyword\">in</span> targets<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>            year<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>each<span class=\"token punctuation\">.</span>p<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'\\xa0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token string\">\"(中国大陆)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>        <span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>            <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>    <span class=\"token keyword\">if</span> movies<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"大闹天宫\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>        year<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"1961 / 1964 / 1978 / 2004\"</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>    <span class=\"token comment\"># 国家</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>    country <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>    targets <span class=\"token operator\">=</span> soup<span class=\"token punctuation\">.</span>find_all<span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">,</span> class_<span class=\"token operator\">=</span><span class=\"token string\">\"bd\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>    <span class=\"token keyword\">for</span> each <span class=\"token keyword\">in</span> targets<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>            country<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>each<span class=\"token punctuation\">.</span>p<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'\\xa0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>        <span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>            <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>    <span class=\"token comment\"># 类型</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>    kinds <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>    targets <span class=\"token operator\">=</span> soup<span class=\"token punctuation\">.</span>find_all<span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">,</span> class_<span class=\"token operator\">=</span><span class=\"token string\">\"bd\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>    <span class=\"token keyword\">for</span> each <span class=\"token keyword\">in</span> targets<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>            kinds<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>each<span class=\"token punctuation\">.</span>p<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'\\xa0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>        <span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>            <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>    result <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>    length <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>movies<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>        result<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>movies<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> ranks<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> director<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> leading_actor<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>                       people<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> sentence<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> year<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> country<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> kinds<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>    <span class=\"token keyword\">return</span> result</pre></td></tr><tr><td data-num=\"147\"></td><td><pre></pre></td></tr><tr><td data-num=\"148\"></td><td><pre></pre></td></tr><tr><td data-num=\"149\"></td><td><pre><span class=\"token comment\"># 找出一共有多少个页面</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">find_pages</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>    soup <span class=\"token operator\">=</span> BeautifulSoup<span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">,</span> <span class=\"token string\">'html.parser'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>    depth <span class=\"token operator\">=</span> soup<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token string\">'span'</span><span class=\"token punctuation\">,</span> class_<span class=\"token operator\">=</span><span class=\"token string\">'next'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>previous_sibling<span class=\"token punctuation\">.</span>previous_sibling<span class=\"token punctuation\">.</span>text</pre></td></tr><tr><td data-num=\"153\"></td><td><pre></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>depth<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre></pre></td></tr><tr><td data-num=\"156\"></td><td><pre></pre></td></tr><tr><td data-num=\"157\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">save_to_excel</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>    wb <span class=\"token operator\">=</span> Workbook<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre>    ws <span class=\"token operator\">=</span> wb<span class=\"token punctuation\">.</span>active</pre></td></tr><tr><td data-num=\"160\"></td><td><pre>    ws<span class=\"token punctuation\">[</span><span class=\"token string\">\"A1\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"名称\"</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>    ws<span class=\"token punctuation\">[</span><span class=\"token string\">\"B1\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"评分\"</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre>    ws<span class=\"token punctuation\">[</span><span class=\"token string\">\"c1\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"导演\"</span></pre></td></tr><tr><td data-num=\"163\"></td><td><pre>    ws<span class=\"token punctuation\">[</span><span class=\"token string\">'d1'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"主演\"</span></pre></td></tr><tr><td data-num=\"164\"></td><td><pre>    ws<span class=\"token punctuation\">[</span><span class=\"token string\">\"e1\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"评价人数\"</span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre>    ws<span class=\"token punctuation\">[</span><span class=\"token string\">\"f1\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"电影描述\"</span></pre></td></tr><tr><td data-num=\"166\"></td><td><pre>    ws<span class=\"token punctuation\">[</span><span class=\"token string\">\"g1\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"年份\"</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre>    ws<span class=\"token punctuation\">[</span><span class=\"token string\">\"h1\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"国家\"</span></pre></td></tr><tr><td data-num=\"168\"></td><td><pre>    ws<span class=\"token punctuation\">[</span><span class=\"token string\">\"i1\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"类型\"</span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre>    <span class=\"token keyword\">for</span> each <span class=\"token keyword\">in</span> result<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"170\"></td><td><pre>        ws<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>each<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"171\"></td><td><pre>    wb<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token string\">\"豆瓣电影TOP250.xlsx\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"172\"></td><td><pre></pre></td></tr><tr><td data-num=\"173\"></td><td><pre></pre></td></tr><tr><td data-num=\"174\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"175\"></td><td><pre>    host <span class=\"token operator\">=</span> <span class=\"token string\">\"https://movie.douban.com/top250\"</span></pre></td></tr><tr><td data-num=\"176\"></td><td><pre>    res <span class=\"token operator\">=</span> get_html<span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"177\"></td><td><pre>    depth <span class=\"token operator\">=</span> find_pages<span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"178\"></td><td><pre>    result <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"179\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>depth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"180\"></td><td><pre>        url <span class=\"token operator\">=</span> host <span class=\"token operator\">+</span> <span class=\"token string\">'/?start='</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">25</span> <span class=\"token operator\">*</span> i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"181\"></td><td><pre>        res <span class=\"token operator\">=</span> get_html<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"182\"></td><td><pre>        result<span class=\"token punctuation\">.</span>extend<span class=\"token punctuation\">(</span>parser_html<span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"183\"></td><td><pre>    save_to_excel<span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"184\"></td><td><pre></pre></td></tr><tr><td data-num=\"185\"></td><td><pre></pre></td></tr><tr><td data-num=\"186\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"187\"></td><td><pre>    main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"部分结果展示\"><a class=\"anchor\" href=\"#部分结果展示\">#</a> 部分结果展示</h1>\n<p><img data-src=\"/images/3.jpg\" alt=\"我在这里\" /></p>\n",
            "tags": [
                "爬虫",
                "爬虫"
            ]
        },
        {
            "id": "https://github.com/ICAN1999/ICAN1999.github.io.git/crawler/%E7%88%AC%E5%8F%96%E6%9C%89%E9%81%93%E7%BF%BB%E8%AF%91/",
            "url": "https://github.com/ICAN1999/ICAN1999.github.io.git/crawler/%E7%88%AC%E5%8F%96%E6%9C%89%E9%81%93%E7%BF%BB%E8%AF%91/",
            "title": "爬取有道翻译",
            "date_published": "2021-01-20T02:31:10.731Z",
            "content_html": "<p>跟着小甲鱼学了爬取有道翻译的功能，试着用 requests 库来模仿他。</p>\n<p><a id=\"more\"></a></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> random</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> json</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>content <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入您要翻译的一句话：\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>data <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>data<span class=\"token punctuation\">[</span><span class=\"token string\">'i'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> content</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>data<span class=\"token punctuation\">[</span><span class=\"token string\">'from'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'AUTO'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>data<span class=\"token punctuation\">[</span><span class=\"token string\">'to'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'AUTO'</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>data<span class=\"token punctuation\">[</span><span class=\"token string\">'smartresult'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'dict'</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>data<span class=\"token punctuation\">[</span><span class=\"token string\">'client'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'fanyideskweb'</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>data<span class=\"token punctuation\">[</span><span class=\"token string\">'salt'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'15961085646287'</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>data<span class=\"token punctuation\">[</span><span class=\"token string\">'sign'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'c896d4737646204892de6e3dbb89ea83'</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>data<span class=\"token punctuation\">[</span><span class=\"token string\">'ts'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'1596108564628'</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>data<span class=\"token punctuation\">[</span><span class=\"token string\">'bv'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'7b07590bbf1761eedb1ff6dbfac3c1f0'</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>data<span class=\"token punctuation\">[</span><span class=\"token string\">'doctype'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'json'</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>data<span class=\"token punctuation\">[</span><span class=\"token string\">'version'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'2.1'</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>data<span class=\"token punctuation\">[</span><span class=\"token string\">'keyfrom'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'fanyi.web'</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>data<span class=\"token punctuation\">[</span><span class=\"token string\">'action'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'FY_BY_REALTlME'</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\"># 隐藏请求的标头</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>hd <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'user-agent'</span><span class=\"token punctuation\">:</span>'Mozilla<span class=\"token operator\">/</span><span class=\"token number\">5.0</span> <span class=\"token punctuation\">(</span>Windows NT <span class=\"token number\">10.0</span><span class=\"token punctuation\">;</span> Win64<span class=\"token punctuation\">;</span> x64<span class=\"token punctuation\">)</span>\\</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>AppleWebKit<span class=\"token operator\">/</span><span class=\"token number\">537.36</span> <span class=\"token punctuation\">(</span>KHTML<span class=\"token punctuation\">,</span> like Gecko<span class=\"token punctuation\">)</span> Chrome<span class=\"token operator\">/</span><span class=\"token number\">84.0</span><span class=\"token number\">.4147</span><span class=\"token number\">.105</span> Safari<span class=\"token operator\">/</span><span class=\"token number\">537.36</span> Edg<span class=\"token operator\">/</span><span class=\"token number\">84.0</span><span class=\"token number\">.522</span><span class=\"token number\">.52</span>'<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>list1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'138.117.85.137:999'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'180.211.183.2:8080'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'165.227.35.11:80'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>px <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'https'</span><span class=\"token punctuation\">:</span> random<span class=\"token punctuation\">.</span>choice<span class=\"token punctuation\">(</span>list1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\"># proxies 参数设置代理 ip，应对反爬虫策略</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>r <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">(</span><span class=\"token string\">'POST'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"http://fanyi.youdao.com/translate?smartresult=dict&amp;smartresult=rule\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                     data<span class=\"token operator\">=</span>data<span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>hd<span class=\"token punctuation\">,</span> proxies<span class=\"token operator\">=</span>px<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>target <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"结果为 %s\"</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">[</span><span class=\"token string\">'translateResult'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'tgt'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "爬虫",
                "爬虫"
            ]
        },
        {
            "id": "https://github.com/ICAN1999/ICAN1999.github.io.git/crawler/%E6%B7%98%E5%AE%9D%E5%95%86%E5%93%81%E6%AF%94%E4%BB%B7%E5%AE%9A%E5%90%91%E7%88%AC%E8%99%AB/",
            "url": "https://github.com/ICAN1999/ICAN1999.github.io.git/crawler/%E6%B7%98%E5%AE%9D%E5%95%86%E5%93%81%E6%AF%94%E4%BB%B7%E5%AE%9A%E5%90%91%E7%88%AC%E8%99%AB/",
            "title": "淘宝商品比价定向爬虫",
            "date_published": "2021-01-20T02:31:10.729Z",
            "content_html": "<p>看了蒿天老师的爬虫教程里的淘宝商品比价定向爬虫，发现一样的代码爬取不到数据，只能爬到淘宝的登陆界面，原来是淘宝设置了反爬虫机制。<br />\n<a id=\"more\"></a><br />\n 然而这并不能阻挡爬虫前进的脚步，我们可以设置 request 方法里的 13 个控制访问参数的中 cookies，给予爬虫的认证机制，瞒天过海。cookie，有时也用复数形式 cookies，是储存在用户本地终端上的数据。用户使用浏览器访问 Web, 服务器会检查用户是否提供了认证 cookie，如果没有的话，则将用户重定向到登录页面。在用户成功登录后，服务器会产生认证 cookie，并通过 HTTP 响应中的 Set-Cookie 头部送给客户端，用于对用户随后的请求进行检查和验证，接着将用户重定向到初始请求的资源。所以 python 写的爬虫程序肯定是没有淘宝网提供的 cookie，那么我们就自己给它一个 cookie，就是登录自己的淘宝账号，在浏览器中按 F12，查看当前链接的标头找到 cookie，将 cookie 后的内容复制下来给 cookies 作为值，爬虫就有了认证 cookie。如果想更好地隐藏爬虫，我们可以使用 user-agent 和代理服务器 ip 来访问，这是爬虫针对反爬虫机制的策略。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> re</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">gethtmlext</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    hd <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'cookie'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'cna=+4CAF9/gW3YCAasi1hW+gF5h; miid=66549921069627229; t=c047a8dde1d2bf84949e11de124f7391; sgcookie=EOk20mDKNQ6Cb1i1%2BTLig; uc3=lg2=WqG3DMC9VAQiUQ%3D%3D&amp;nk2=F5RNbeeW%2Bfnlu5j7&amp;id2=UUphy%2FZ9tMABgxGmRg%3D%3D&amp;vt3=F8dBxGynX5QSF4tqjBk%3D; lgc=tb8800965404; uc4=id4=0%40U2grEJGCJanxsAL7CNx%2BJB0DXsn46L3X&amp;nk4=0%40FY4GunTpCxE%2BYUR4SxiLoyUlbm%2Bociw%3D; tracknick=tb8800965404; _cc_=Vq8l%2BKCLiw%3D%3D; enc=WwSfMkfHAQVS60vxr6ghMVDlKT%2FViN585FJxYAjlqsog2mrK8grOlNgL4%2FGHMpYbfC3gvMp1xIewYNEUOFbNwxgRr3Vi9XIMUA0uuA8vhoI%3D; thw=cn; hng=CN%7Czh-CN%7CCNY%7C156; mt=ci=-1_0; _tb_token_=e3ebd46f0ee3d; _m_h5_tk=51f1293b0a71acbee6194d3764e64e05_1597034064458; _m_h5_tk_enc=fd777161ac8c25498b783e1ae9eed1e6; alitrackid=www.taobao.com; lastalitrackid=www.taobao.com; cookie2=1028bc164ed72d5d32593fb2d198f6ab; v=0; JSESSIONID=0D758F9A271A0BB4118235882775409E; uc1=cookie14=UoTV6ymCXFgHbg%3D%3D; tfstk=cBSVBiM_5oE4kMx_JntZc2pm14KAZoRMO0JeowFWo8DbiKTcieh9E-bHUdlRwEf..; l=eBSeS5ElOQMMaEYsBOfwourza77OSIRAguPzaNbMiOCPO9fp5Bx1WZuAGbT9C3GVh6u2R3ujOir_BeYBqIv4n5U62j-la_kmn; isg=BLu7T58oYPII3Fx29IC5DHNZSp8lEM8ShRgCgK14l7rRDNvuNeBfYtlOJqxCLCcK'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>          <span class=\"token string\">'user-agent'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Mozilla/5.0'</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        r <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>hd<span class=\"token punctuation\">,</span> timeout<span class=\"token operator\">=</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        r<span class=\"token punctuation\">.</span>raise_for_status<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        r<span class=\"token punctuation\">.</span>encoding <span class=\"token operator\">=</span> r<span class=\"token punctuation\">.</span>apparent_encoding</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">return</span> r<span class=\"token punctuation\">.</span>text</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">\"爬取失败\"</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">parsepage</span><span class=\"token punctuation\">(</span>ilt<span class=\"token punctuation\">,</span> html<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        plt <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span><span class=\"token string\">r'\\\"view_price\\\"\\:\\\"[\\d\\.]*\\\"'</span><span class=\"token punctuation\">,</span> html<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        tlt <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span><span class=\"token string\">r'\\\"raw_title\\\"\\:\\\".*?\\\"'</span><span class=\"token punctuation\">,</span> html<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>plt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            price <span class=\"token operator\">=</span> <span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span>plt<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">':'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            title <span class=\"token operator\">=</span> <span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span>tlt<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">':'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            ilt<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>price<span class=\"token punctuation\">,</span> title<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"解析失败\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">printgoodlist</span><span class=\"token punctuation\">(</span>ilt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    tplt <span class=\"token operator\">=</span> <span class=\"token string\">\"&#123;:4&#125;\\t&#123;:8&#125;\\t&#123;:16&#125;\"</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>tplt<span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"序号\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"价格\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"商品名称\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    count <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">for</span> g <span class=\"token keyword\">in</span> ilt<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        count <span class=\"token operator\">=</span> count <span class=\"token operator\">+</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>tplt<span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">,</span> g<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> g<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    goods <span class=\"token operator\">=</span> <span class=\"token string\">'书包'</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    depth <span class=\"token operator\">=</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    start_url <span class=\"token operator\">=</span> <span class=\"token string\">'https://s.taobao.com/search?q='</span> <span class=\"token operator\">+</span> goods</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    infolist <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>depth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            url <span class=\"token operator\">=</span> start_url <span class=\"token operator\">+</span> <span class=\"token string\">'&amp;s='</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">44</span> <span class=\"token operator\">*</span> i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            html <span class=\"token operator\">=</span> gethtmlext<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>            parsepage<span class=\"token punctuation\">(</span>infolist<span class=\"token punctuation\">,</span> html<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>            <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    printgoodlist<span class=\"token punctuation\">(</span>infolist<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "爬虫",
                "爬虫"
            ]
        },
        {
            "id": "https://github.com/ICAN1999/ICAN1999.github.io.git/crawler/%E4%B8%AD%E5%9B%BD%E5%A4%A7%E5%AD%A6%E6%8E%92%E5%90%8D%E7%88%AC%E5%8F%96/",
            "url": "https://github.com/ICAN1999/ICAN1999.github.io.git/crawler/%E4%B8%AD%E5%9B%BD%E5%A4%A7%E5%AD%A6%E6%8E%92%E5%90%8D%E7%88%AC%E5%8F%96/",
            "title": "中国大学排名爬取",
            "date_published": "2021-01-20T02:31:10.726Z",
            "content_html": "<p>我们进入由上海交通大学研发的最好大学网来获得 2020 年软科中国最好大学排名，并将大学排名信息输出。</p>\n<p><a id=\"more\"></a></p>\n<p>首先我们先看下这网站是否有 robots 协议，然而并没有。<br />\n进入 2020 年的软科排名，鼠标右键查看页面源代码，按 Ctrl+F 查找 “清华大学”，此时可以看到这些大学信息在 &lt; tbody&gt;&lt;/tbody &gt; 标签之中，因此我们要获取大学的排名信息，就从这对标签中提取。<br />\n步骤 1：从网络上获取大学排名网页内容<br />\n步骤 2：提取网页内容中信息到合适的数据结构<br />\n步骤 3：利用数据结构并输出结果</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> bs4 <span class=\"token keyword\">import</span> BeautifulSoup</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> bs4</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">getHTMLText</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        r <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> timeout<span class=\"token operator\">=</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        r<span class=\"token punctuation\">.</span>raise_for_status<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        r<span class=\"token punctuation\">.</span>encoding <span class=\"token operator\">=</span> r<span class=\"token punctuation\">.</span>apparent_encoding</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">return</span> r<span class=\"token punctuation\">.</span>text</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">fillUnivList</span><span class=\"token punctuation\">(</span>ulist<span class=\"token punctuation\">,</span> html<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    soup <span class=\"token operator\">=</span> BeautifulSoup<span class=\"token punctuation\">(</span>html<span class=\"token punctuation\">,</span> <span class=\"token string\">\"html.parser\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">for</span> tr <span class=\"token keyword\">in</span> soup<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token string\">'tbody'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token builtin\">isinstance</span><span class=\"token punctuation\">(</span>tr<span class=\"token punctuation\">,</span> bs4<span class=\"token punctuation\">.</span>element<span class=\"token punctuation\">.</span>Tag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            tds <span class=\"token operator\">=</span> tr<span class=\"token punctuation\">(</span><span class=\"token string\">'td'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            ulist<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>tds<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">,</span> tds<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">,</span> tds<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">printUnivList</span><span class=\"token punctuation\">(</span>ulist<span class=\"token punctuation\">,</span> num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    tplt <span class=\"token operator\">=</span> <span class=\"token string\">\"&#123;0:^10&#125;\\t&#123;1:&#123;3&#125;^10&#125;\\t&#123;2:^10&#125;\"</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>tplt<span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"排名\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"学校名称\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"总分\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">12288</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        u <span class=\"token operator\">=</span> ulist<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>tplt<span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>u<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> u<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> u<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">12288</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    uinfo <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    url <span class=\"token operator\">=</span> <span class=\"token string\">'http://www.zuihaodaxue.com/zuihaodaxuepaiming2020.html'</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    html <span class=\"token operator\">=</span> getHTMLText<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    fillUnivList<span class=\"token punctuation\">(</span>uinfo<span class=\"token punctuation\">,</span> html<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    printUnivList<span class=\"token punctuation\">(</span>uinfo<span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 20 univs</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "爬虫",
                "爬虫"
            ]
        },
        {
            "id": "https://github.com/ICAN1999/ICAN1999.github.io.git/lanqiao/%E6%98%9F%E7%B3%BB%E7%82%B8%E5%BC%B9/",
            "url": "https://github.com/ICAN1999/ICAN1999.github.io.git/lanqiao/%E6%98%9F%E7%B3%BB%E7%82%B8%E5%BC%B9/",
            "title": "星系炸弹",
            "date_published": "2021-01-20T02:01:08.812Z",
            "content_html": "<h2 id=\"题目描述\"><a class=\"anchor\" href=\"#题目描述\">#</a> 题目描述</h2>\n<p>在 X 星系的广袤空间中漂浮着许多 X 星人造 “炸弹”，用来作为宇宙中的路标。<br />\n每个炸弹都可以设定多少天之后爆炸。<br />\n比如：阿尔法炸弹 2015 年 1 月 1 日放置，定时为 15 天，则它在 2015 年 1 月 16 日爆炸。<br />\n有一个贝塔炸弹，a 年 b 月 c 日放置，定时为 n 天，请你计算它爆炸的准确日期。</p>\n<h2 id=\"输入\"><a class=\"anchor\" href=\"#输入\">#</a> 输入</h2>\n<p>输入存在多组数据，每组数据输入一行，每一行输入四个正整数 a,b,c,n<br />\n 输入保证日期在 1000-01-01 到 2020-01-01 之间，且日期合法。<br />\nn 不超过 1000</p>\n<h2 id=\"输出\"><a class=\"anchor\" href=\"#输出\">#</a> 输出</h2>\n<p>请填写该日期，格式为 yyyy-mm-dd  即 4 位年份 2 位月份 2 位日期。比如：2015-02-19<br />\n 请严格按照格式书写。不能出现其它文字或符号。</p>\n<h2 id=\"样例输入\"><a class=\"anchor\" href=\"#样例输入\">#</a> 样例输入</h2>\n<p>2015 1 1 15<br />\n2014 11 9 1000</p>\n<h2 id=\"样例输出\"><a class=\"anchor\" href=\"#样例输出\">#</a> 样例输出</h2>\n<p>2015-01-16<br />\n2017-08-05</p>\n<h2 id=\"代码\"><a class=\"anchor\" href=\"#代码\">#</a> 代码</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">IsLeapYear</span><span class=\"token punctuation\">(</span>year<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>year<span class=\"token operator\">%</span><span class=\"token number\">4</span><span class=\"token operator\">==</span><span class=\"token number\">0</span> <span class=\"token keyword\">and</span> year<span class=\"token operator\">%</span><span class=\"token number\">100</span><span class=\"token operator\">!=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">or</span> <span class=\"token punctuation\">(</span>year<span class=\"token operator\">%</span><span class=\"token number\">400</span><span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">PrintDate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    year<span class=\"token punctuation\">,</span>month<span class=\"token punctuation\">,</span>day<span class=\"token punctuation\">,</span>n<span class=\"token operator\">=</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    days<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">31</span><span class=\"token punctuation\">,</span><span class=\"token number\">28</span><span class=\"token punctuation\">,</span><span class=\"token number\">31</span><span class=\"token punctuation\">,</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span><span class=\"token number\">31</span><span class=\"token punctuation\">,</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span><span class=\"token number\">31</span><span class=\"token punctuation\">,</span><span class=\"token number\">31</span><span class=\"token punctuation\">,</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span><span class=\"token number\">31</span><span class=\"token punctuation\">,</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span><span class=\"token number\">31</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">if</span> IsLeapYear<span class=\"token punctuation\">(</span>year<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        days<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">29</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        day<span class=\"token operator\">=</span>day<span class=\"token operator\">+</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">if</span> day<span class=\"token operator\">></span>days<span class=\"token punctuation\">[</span>month<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            day<span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            month<span class=\"token operator\">=</span>month<span class=\"token operator\">+</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">if</span> month<span class=\"token operator\">></span><span class=\"token number\">12</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            month<span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            year<span class=\"token operator\">=</span>year<span class=\"token operator\">+</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">if</span> IsLeapYear<span class=\"token punctuation\">(</span>year<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            days<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">29</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            days<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">28</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&#123;:&#125;-&#123;:0>2&#125;-&#123;:0>2&#125;\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>year<span class=\"token punctuation\">,</span>month<span class=\"token punctuation\">,</span>day<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    PrintDate<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "蓝桥杯",
                "蓝桥杯"
            ]
        },
        {
            "id": "https://github.com/ICAN1999/ICAN1999.github.io.git/Requests%E5%BA%93%E5%85%A5%E9%97%A8/",
            "url": "https://github.com/ICAN1999/ICAN1999.github.io.git/Requests%E5%BA%93%E5%85%A5%E9%97%A8/",
            "title": "Requests库入门",
            "date_published": "2020-12-14T13:26:23.548Z",
            "content_html": "<p>Request 库是 Python 的第三方库，它也是目前公认的爬取网页最好的第三库，它很简单又简洁，甚至能用一行代码就从网上获取相关的资源。<br />\n<a id=\"more\"></a></p>\n<h1 id=\"requests-安装\"><a class=\"anchor\" href=\"#requests-安装\">#</a> Requests 安装</h1>\n<p>首先进入命令提示符，然后输入 <code>pip install requests</code> ，这样 requests 库就会经过下载并安装在系统中，其他的问题可以参考 Requests 库的文档，内容比较详细。</p>\n<h1 id=\"requests-库测试\"><a class=\"anchor\" href=\"#requests-库测试\">#</a> Requests 库测试</h1>\n<p>接下来我们来测试 requests 库的效果，启动 IDLE, 输入以下代码</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span>response <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"http://www.baidu.com\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span>response<span class=\"token punctuation\">.</span>status_code</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">200</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span>response<span class=\"token punctuation\">.</span>encoding <span class=\"token operator\">=</span> <span class=\"token string\">'utf-8'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span>response<span class=\"token punctuation\">.</span>text</pre></td></tr></table></figure><p>看看它的状态码是否为 200，是 200 则访问成功，之后更改它的字符编码 <code>r.encoding = 'utf-8'</code> ，接着输入 <code>response.text</code> , 这样百度的主页就成功抓取下来了。</p>\n<h1 id=\"response-对象的属性\"><a class=\"anchor\" href=\"#response-对象的属性\">#</a> Response 对象的属性</h1>\n<p>上面一行代码中最重要的两个对象，就是 Request 对象和 Response 对象，而包含了爬取网页的全部内容的 Response 对象又是重中之重，下面我们来重点看下 Response 对象</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性</th>\n<th style=\"text-align:left\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">r.status_code</td>\n<td style=\"text-align:left\">HTTP 请求的返回状态，200 表示连接成功，404 表示失败</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">r.text</td>\n<td style=\"text-align:left\">HTTP 响应内容的字符串形式，即：url 对应的页面内容</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">r.encoding</td>\n<td style=\"text-align:left\">从 HTTP header 中猜测的响应内容编码方式</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">r.apparent_encoding</td>\n<td style=\"text-align:left\">从内容中分析出的响应内容编码方式（备选编码方式）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">r.content</td>\n<td style=\"text-align:left\">HTTP 响应内容的二进制形式</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"request-库的异常\"><a class=\"anchor\" href=\"#request-库的异常\">#</a> Request 库的异常</h1>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">异常</th>\n<th style=\"text-align:left\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">requests.ConnectionError</td>\n<td style=\"text-align:left\">网络连接错误异常，如 DNS 查询失败、拒绝连接等</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">requests.HTTPError</td>\n<td style=\"text-align:left\">HTTP 错误异常</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">requests.URLRequired</td>\n<td style=\"text-align:left\">URL 缺失异常</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">requests.TooManyRedirects</td>\n<td style=\"text-align:left\">超过最大重定向次数，产生重定向异常</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">requests.ConnectTimeout</td>\n<td style=\"text-align:left\">连接远程服务器超时异常</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">requests.Timeout</td>\n<td style=\"text-align:left\">请求 URL 超时，产生超时异常</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">r.raise_for_status()</td>\n<td style=\"text-align:left\">如果不是 200，产生异常 requests.HTTPError</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">getHTMLText</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        r <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        r<span class=\"token punctuation\">.</span>raise_for_status<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        r<span class=\"token punctuation\">.</span>encoding <span class=\"token operator\">=</span> r<span class=\"token punctuation\">.</span>apparent_encoding</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">return</span> r<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">100</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">\"产生异常\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    url <span class=\"token operator\">=</span> <span class=\"token string\">\"http://www.baidu.com\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>getHTMLText<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"http-协议\"><a class=\"anchor\" href=\"#http-协议\">#</a> HTTP 协议</h1>\n<p>HTTP (Hyper Text Transfer Protocol)&lt; 超文本传输协议 &gt; 的缩写。&lt;br&gt;HTTP 是一个基于 “请求与响应” 的模式、无状态的应用层协议。简单说，用户发出请求，服务器作出回应这就是 “请求与响应” 的模式，无状态指的是第一次请求跟第二次请求之间并没有关联，应用层协议指的是该协议工作在 TCP 协议之上。HTTP 协议采用 URL 作为定位网络资源的标识。URL 是通过 HTTP 协议存取资源的 Internet 路径，一个 URL 对应一个数据资源。它就像我们电脑里文件的路径一样，只不过它是在 Internet 上。</p>\n<p>URL 格式:<span class=\"exturl\" data-url=\"aHR0cDovL2hvc3Q=\">http://host</span>[:port][path]<br />\n host: 合法的 Internet 主机域名或 IP 地址<br />\n port: 端口号，默认为 80<br />\npath: 资源在主机或服务器 IP 地址上的内部路径</p>\n<h2 id=\"http-协议对资源的操作\"><a class=\"anchor\" href=\"#http-协议对资源的操作\">#</a> HTTP 协议对资源的操作</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">方法</th>\n<th style=\"text-align:center\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">GET</td>\n<td style=\"text-align:center\">请求获取 URL 位置的资源</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">HEAD</td>\n<td style=\"text-align:center\">请求获取 URL1 位置资源的响应消息报告，即获取该资源的头部信息</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">POST</td>\n<td style=\"text-align:center\">请求向 URL 位置的资源后附加新的数据</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">PUT</td>\n<td style=\"text-align:center\">请求向 URL 位置存储一个资源，覆盖原 URL 位置的资源</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">PATCH</td>\n<td style=\"text-align:center\">请求局部更新 URL 位置的资源，即改变该处资源的部分内容</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">DELETE</td>\n<td style=\"text-align:center\">请求删除 URL 位置存储的资源</td>\n</tr>\n</tbody>\n</table>\n<p>我们可以把互联网或 Internet 当成一个云端，那么云端上的所有资源实际是以 URL 来做相关的描述，如果想获取资源就用 GET 或 HEAD 方法，如果想把自己的资源放到 URL 对应的位置上，就用 POST、PUT、PATCH，删除则用 DELETE。HTTP 通过 URL 对资源做定位，通过这六个常用方法对资源做管理，每一次操作都是独立无状态的，也就是这个操作跟那个操作没有关系。在 HTTP 协议的世界里，网络通道跟服务器都是黑盒子，它能看到的就是 URL 链接以及对 URL 的相关操作。</p>\n<h1 id=\"rquests-库的-7-个主要方法\"><a class=\"anchor\" href=\"#rquests-库的-7-个主要方法\">#</a> Rquests 库的 7 个主要方法</h1>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">方法</th>\n<th style=\"text-align:left\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">requests.request()</td>\n<td style=\"text-align:left\">构造一个请求，支撑一下各方法的基础方法</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">requests.get()</td>\n<td style=\"text-align:left\">获取 HTML 网页的主要方法，对应 HTTP 的 GET</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">requests.head()</td>\n<td style=\"text-align:left\">获取 HTML 网页头的信息方法，对应 HTTP 的 HEAD</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">requests.post()</td>\n<td style=\"text-align:left\">向 HTML 网页提交 POST 请求方法，对应 HTTP 的 POST</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">requests.put()</td>\n<td style=\"text-align:left\">向 HTML 网页提交 PUT 请求的方法，对应 HTTP 的 RUT</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">requests.patch()</td>\n<td style=\"text-align:left\">向 HTML 网页提交局部修改请求，对应于 HTTP 的 PATCH</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">requests.delete()</td>\n<td style=\"text-align:left\">向 HTML 页面提交删除请求，对应 HTTP 的 DELETE</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"requestsrequest方法\"><a class=\"anchor\" href=\"#requestsrequest方法\">#</a> requests.request () 方法</h2>\n<p>r = requests.request(method, url, **kwargs)<br />\n method: 请求方式，对应 GET、PUT 等 7 种<br />\n url：获取页面的 url 链接<br />\n **kwargs：13 个可选的控制访问参数</p>\n<h2 id=\"kwargs13-个控制访问参数介绍\"><a class=\"anchor\" href=\"#kwargs13-个控制访问参数介绍\">#</a> **kwargs13 个控制访问参数介绍</h2>\n<h3 id=\"params\"><a class=\"anchor\" href=\"#params\">#</a> params</h3>\n<p>字典或字节序列，作为参数增加到 url 中。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span>kv <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'key1'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'value1'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'key2'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'value2'</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span>r <span class=\"token operator\">=</span>requests<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">(</span><span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'http://python123.io/ws'</span><span class=\"token punctuation\">,</span> params <span class=\"token operator\">=</span> kv<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>http<span class=\"token punctuation\">:</span><span class=\"token operator\">//</span>python123<span class=\"token punctuation\">.</span>io<span class=\"token operator\">/</span>ws?key1<span class=\"token operator\">=</span>value1<span class=\"token operator\">&amp;</span>key2<span class=\"token operator\">=</span>value2</pre></td></tr></table></figure><h3 id=\"data\"><a class=\"anchor\" href=\"#data\">#</a> data</h3>\n<p>字典、字节序列或文件对象，作为 Request 的内容。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span>kv <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'key1'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'value1'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'key2'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'value2'</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span>r <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">(</span><span class=\"token string\">'POST'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'http://python123.io/ws'</span><span class=\"token punctuation\">,</span> data <span class=\"token operator\">=</span> kv<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> body <span class=\"token operator\">=</span> <span class=\"token string\">'主体内容'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> r <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">(</span><span class=\"token string\">'POST'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'http://python123.io/ws'</span><span class=\"token punctuation\">,</span> data <span class=\"token operator\">=</span> body<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"json\"><a class=\"anchor\" href=\"#json\">#</a> json</h3>\n<p>JSON 格式的数据，作为 Request 的内容。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span>kv <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'key1'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'value1'</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span>r <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">(</span><span class=\"token string\">'POST'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'http://python123.io/ws'</span><span class=\"token punctuation\">,</span> json <span class=\"token operator\">=</span> kv<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"headers\"><a class=\"anchor\" href=\"#headers\">#</a> headers</h3>\n<p>字典，HTTP 定制头。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span>hd <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'user-agent'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'Chrome/10'</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span>r <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">(</span><span class=\"token string\">'POST'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'http://python123.io/ws'</span><span class=\"token punctuation\">,</span> headers <span class=\"token operator\">=</span> hd<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>修改HTTP协议中user<span class=\"token operator\">-</span>agen字段，就是模拟Chrome浏览器访问链接</pre></td></tr></table></figure><h3 id=\"cookies\"><a class=\"anchor\" href=\"#cookies\">#</a> cookies</h3>\n<p>字典，cookies（从 HTTP 协议中解析得来）是 Requests 中的 cookie。</p>\n<h3 id=\"auth\"><a class=\"anchor\" href=\"#auth\">#</a> auth</h3>\n<p>元组， 支持 HTTP 的认证功能。</p>\n<h3 id=\"files\"><a class=\"anchor\" href=\"#files\">#</a> files</h3>\n<p>字典，用于向服务器传输文件。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span>fs <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'file'</span><span class=\"token punctuation\">:</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data.txt'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'rb'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span>r <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">(</span><span class=\"token string\">'POST'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'http://python123.io/ws'</span><span class=\"token punctuation\">,</span> files <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"timeout\"><a class=\"anchor\" href=\"#timeout\">#</a> timeout</h3>\n<p>秒为单位，用于设置超时时间，防止爬取时间过长，无效爬取。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span>r <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">(</span><span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'http://python123.io/ws'</span><span class=\"token punctuation\">,</span> timeout <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"proxies\"><a class=\"anchor\" href=\"#proxies\">#</a> proxies</h3>\n<p>字典，设定访问代理服务器，可以增加登录认证，有效地隐藏用户原来的 IP 地址信息。（防止爬虫逆追踪）</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span>pxs <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'http'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'http://user:pass@10.10.10.1:1234'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>          <span class=\"token string\">'https'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'https://10.10.10.1:4321'</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span>r <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">(</span><span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'http://www.baidu.com'</span><span class=\"token punctuation\">,</span> proxies <span class=\"token operator\">=</span> pxs<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"allow_redirects\"><a class=\"anchor\" href=\"#allow_redirects\">#</a> allow_redirects</h3>\n<p>布尔类型，表示是否 url 进行重定向，默认为 True</p>\n<h3 id=\"stream\"><a class=\"anchor\" href=\"#stream\">#</a> stream</h3>\n<p>布尔类型，表示获取到内容是否立即下载，默认为 True</p>\n<h3 id=\"verify\"><a class=\"anchor\" href=\"#verify\">#</a> verify</h3>\n<p>布尔类型，认证 SSL 证书</p>\n<h3 id=\"cert\"><a class=\"anchor\" href=\"#cert\">#</a> cert</h3>\n<p>保存本地 SSL 证书路径</p>\n<h2 id=\"requestsget方法\"><a class=\"anchor\" href=\"#requestsget方法\">#</a> requests.get () 方法</h2>\n<p>r = requests.get (url, params = None, **kwargs), 它构造了一个向服务器请求资源的 Request 对象，返回一个包含服务器资源的 Response 对象。</p>\n<p>url：获取页面的 URL 链接<br />\n params：URL 中的额外参数，字典或字节流格式，可选<br />\n **kwargs：12 个控制访问的参数<br />\n这里 12 个控制访问参数就是 request 方法中除了 params 的 12 个参数。</p>\n<h2 id=\"requestshead方法\"><a class=\"anchor\" href=\"#requestshead方法\">#</a> requests.head () 方法</h2>\n<p>r = requests.head(url, **kwargs)<br />\n url：获取页面的 url 链接<br />\n **kwargs：12 个控制访问的参数</p>\n<h2 id=\"requestsposturl-data-none-json-none-kwargs\"><a class=\"anchor\" href=\"#requestsposturl-data-none-json-none-kwargs\">#</a> requests.post(url, data = None, json = None, **kwargs)</h2>\n<p>url：更新页面的 url 链接<br />\n data：字典、字节序列或文件，Request 的内容<br />\n json：JSON 格式的数据，Request 的内容<br />\n **kwargs：12 个控制访问的参数</p>\n<h2 id=\"requestsputurl-data-none-kwargs\"><a class=\"anchor\" href=\"#requestsputurl-data-none-kwargs\">#</a> requests.put(url, data = None, **kwargs)</h2>\n<p>url：更新页面的 url 链接<br />\n data：字典、字节序列或文件，Request 的内容<br />\n **kwargs：12 个控制访问的参数</p>\n<h2 id=\"requestspatchurl-data-none-kwargs\"><a class=\"anchor\" href=\"#requestspatchurl-data-none-kwargs\">#</a> requests.patch(url, data = None, **kwargs)</h2>\n<p>url：更新页面的 url 链接<br />\n data：字典、字节序列或文件，Request 的内容<br />\n **kwargs：12 个控制访问的参数</p>\n<h2 id=\"requestsdeleteurl-kwargs\"><a class=\"anchor\" href=\"#requestsdeleteurl-kwargs\">#</a> requests.delete(url, **kwargs)</h2>\n<p>url：删除页面的 url 链接<br />\n **kwargs：12 个控制访问的参数</p>\n",
            "tags": [
                "Python",
                "Requests",
                "Requests"
            ]
        },
        {
            "id": "https://github.com/ICAN1999/ICAN1999.github.io.git/BeautifulSoup%E5%BA%93%E5%85%A5%E9%97%A8/",
            "url": "https://github.com/ICAN1999/ICAN1999.github.io.git/BeautifulSoup%E5%BA%93%E5%85%A5%E9%97%A8/",
            "title": "BeautifulSoup库入门",
            "date_published": "2020-12-14T13:26:12.546Z",
            "content_html": "<p>Beautiful Soup 是一个可以从 HTML 或 XML 文件中提取数据的 Python 库。它能够通过你喜欢的转换器实现惯用的文档导航，查找，修改文档的方式。<br />\n<a id=\"more\"></a></p>\n<h1 id=\"beautiful-soup-安装\"><a class=\"anchor\" href=\"#beautiful-soup-安装\">#</a> Beautiful Soup 安装</h1>\n<p>首先进入命令提示符，输入 <code>pip install beautifulsoup4</code> ，之后就可以等待它的下载，其他的问题可以参考 Beautiful Soup 库的中文文档。</p>\n<h1 id=\"beautiful-soup-库测试\"><a class=\"anchor\" href=\"#beautiful-soup-库测试\">#</a> Beautiful Soup 库测试</h1>\n<p>演示 HTML 页面地址：<span class=\"exturl\" data-url=\"aHR0cDovL3B5dGhvbjEyMy5pby93cy9kZW1vLmh0bWw=\">http://python123.io/ws/demo.html</span><br />\n 文件名称：demo.html<br />\n 点击鼠标右键然后再点击查看页面源代码，或者快捷键按 Ctrl+U<br />\n 这是页面的 HTML5 源代码</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>This is a python demo page<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>title<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>b</span><span class=\"token punctuation\">></span></span>The demo python introduces several python courses.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>b</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>course<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Python is a wonderful general-purpose programming language. You can learn Python from novice to professional by tracking the following courses:</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.icourse163.org/course/BIT-268001<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>py1<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>link1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Basic Python<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span> and <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.icourse163.org/course/BIT-1001870001<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>py2<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>link2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Advanced Python<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>启动 IDLE，输入以下代码</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> bs4 <span class=\"token keyword\">import</span> BeautifulSoup</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>r <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"http://python123.io/ws/demo.html\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>demo <span class=\"token operator\">=</span> r<span class=\"token punctuation\">.</span>text</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>soup <span class=\"token operator\">=</span> BeautifulSoup<span class=\"token punctuation\">(</span>demo<span class=\"token punctuation\">,</span><span class=\"token string\">'html.parser'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>soup<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"beautiful-soup-库的基本元素\"><a class=\"anchor\" href=\"#beautiful-soup-库的基本元素\">#</a> Beautiful Soup 库的基本元素</h1>\n<p>Beautiful Soup 库是解析 HTML 文件和 XML 文件的功能库。以 HTML 为例，打开 HTML 文件的源代码，我们可以看到它是由一组尖括号构成的标签组织起来的，标签之间有包含关系和并列关系，这样形成了 “标签树”。</p>\n<h1 id=\"beautiful-soup-库解析器\"><a class=\"anchor\" href=\"#beautiful-soup-库解析器\">#</a> Beautiful Soup 库解析器</h1>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">解析器</th>\n<th style=\"text-align:center\">使用方法</th>\n<th style=\"text-align:center\">条件</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">bs4 的 HTML 解析器</td>\n<td style=\"text-align:center\">BeautifulSoup(mk,'html.parser')</td>\n<td style=\"text-align:center\">安装 bs4 库</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">lxml 的 HTML 解析器</td>\n<td style=\"text-align:center\">BeautifulSoup(mk,'lxml')</td>\n<td style=\"text-align:center\">pip install lxml</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">lxml 的 XML 解析器</td>\n<td style=\"text-align:center\">BeautifulSoup(mk,'xml')</td>\n<td style=\"text-align:center\">pip install lxml</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">html5lib 的解析器</td>\n<td style=\"text-align:center\">BeautifulSoup(mk,'html5lib')</td>\n<td style=\"text-align:center\">pip install html5lib</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"beautiful-soup-类的基本元素\"><a class=\"anchor\" href=\"#beautiful-soup-类的基本元素\">#</a> Beautiful Soup 类的基本元素</h1>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">元素</th>\n<th style=\"text-align:center\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">Tag</td>\n<td style=\"text-align:center\">标签，最基本的信息组织单元，分别用 &lt;&gt; 和 &lt;/&gt; 标明开头和结尾</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Name</td>\n<td style=\"text-align:center\">标签的名字，&lt;p&gt;...&lt;/p &gt; 的名字是 'p'，格式：&lt;tag&gt;.name</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Attributes</td>\n<td style=\"text-align:center\">标签的属性，字典形式组织，格式：&lt;tag&gt;.attrs</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">NavigableString</td>\n<td style=\"text-align:center\">标签内非属性字符串，&lt;&gt;...&lt;/&gt; 中的字符串，格式：&lt;tag&gt;.string</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Comment</td>\n<td style=\"text-align:center\">标签内字符串的注释部分，一种特殊的 Comment 类型</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"html-内容的遍历方法\"><a class=\"anchor\" href=\"#html-内容的遍历方法\">#</a> HTML 内容的遍历方法</h1>\n<p>HTML 的标签关系分为包含和并列两种关系，标签之间形成了标签树形结构，其中形成了三种遍历方法。</p>\n<h2 id=\"下行遍历\"><a class=\"anchor\" href=\"#下行遍历\">#</a> 下行遍历</h2>\n<p>从根节点到叶子节点的遍历方法</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性</th>\n<th style=\"text-align:left\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">.content</td>\n<td style=\"text-align:left\">子节点的列表，将 &lt;tag&gt; 所有儿子节点存入列表</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">.children</td>\n<td style=\"text-align:left\">子节点的迭代类型，与.content 类似用于循环遍历儿子节点</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">.descendants</td>\n<td style=\"text-align:left\">子孙节点的迭代类型，包含所有子孙节点用于循环遍历</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"上行遍历\"><a class=\"anchor\" href=\"#上行遍历\">#</a> 上行遍历</h2>\n<p>从叶子节点到根节点的遍历方法</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性</th>\n<th style=\"text-align:left\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">.parent</td>\n<td style=\"text-align:left\">节点的父亲标签</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">.parents</td>\n<td style=\"text-align:left\">节点先辈标签的迭代类型，用于循环遍历先辈节点</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"平行遍历\"><a class=\"anchor\" href=\"#平行遍历\">#</a> 平行遍历</h2>\n<p>平级节点之间的遍历方法</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性</th>\n<th style=\"text-align:left\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">.next_sibling</td>\n<td style=\"text-align:left\">返回按照 HTML 文本顺序的下一个平行节点标签</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">.previous_sibling</td>\n<td style=\"text-align:left\">返回按照 HTML 文本顺序的上一个平行节点标签</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">.next_sibilngs</td>\n<td style=\"text-align:left\">迭代类型，返回按照 HTML 文本顺序的后续所有平行节点标签</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">.previous_siblings</td>\n<td style=\"text-align:left\">迭代类型，返回按照 HTML 文本顺序的前续所有平行节点标签</td>\n</tr>\n</tbody>\n</table>\n<p>平行遍历必须发生在同一个父亲节点下的各节点间</p>\n<h1 id=\"html-的格式输出\"><a class=\"anchor\" href=\"#html-的格式输出\">#</a> HTML 的格式输出</h1>\n<p>bs4 库的 prettify () 方法能为 HTML 文本增加换行符，也可以用于标签。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> bs4 <span class=\"token keyword\">import</span> BeautifulSoup</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>r <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"http://python123.io/ws/demo.html\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>demo <span class=\"token operator\">=</span> r<span class=\"token punctuation\">.</span>text</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>soup <span class=\"token operator\">=</span> BeautifulSoup<span class=\"token punctuation\">(</span>demo<span class=\"token punctuation\">,</span> <span class=\"token string\">\"html.parser\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>soup<span class=\"token punctuation\">.</span>prettify<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>结果是</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   This is a python demo page</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>title<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>b</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    The demo python introduces several python courses.</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>b</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>course<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   Python is a wonderful general-purpose programming language. You can learn Python from novice to professional by tracking the following courses:</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>py1<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.icourse163.org/course/BIT-268001<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>link1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    Basic Python</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>   and</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>py2<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.icourse163.org/course/BIT-1001870001<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>link2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    Advanced Python</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>   .</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h1 id=\"html-的内容查找方法\"><a class=\"anchor\" href=\"#html-的内容查找方法\">#</a> HTML 的内容查找方法</h1>\n<p>Beautiful Soup 库提供的 find_all () 方法可以查找 soup 变量中的信息。<br />\n&lt;&gt;.find_all(name,attrs,recursive,string,**kwargs)<br />\n 返回一个列表类型，存储查找的结果<br />\n name：对标签名称的检索字符串<br />\n attrs：对标签属性值的检索字符串，可标注属性检索<br />\n recursive：是否对子孙全部检索，默认为 True<br />\nstring：&lt;&gt;...&lt;/&gt; 中字符串区域的检索字符串<br />\n &lt;tag&gt;(..) 等价于 &lt; tag&gt;.find_all (..)<br />\n soup (..) 等价于 soup.find_all ()<br />\n 可以利用此方法获取一个网页的全部链接，代码如下</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> bs4 <span class=\"token keyword\">import</span> BeautifulSoup</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>r <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"http://www.baidu.com\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>demo <span class=\"token operator\">=</span> r<span class=\"token punctuation\">.</span>text</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>soup <span class=\"token operator\">=</span> BeautifulSoup<span class=\"token punctuation\">(</span>demo<span class=\"token punctuation\">,</span><span class=\"token string\">'html.parser'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">for</span> link <span class=\"token keyword\">in</span> soup<span class=\"token punctuation\">.</span>find_all<span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>link<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'href'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"扩展方法\"><a class=\"anchor\" href=\"#扩展方法\">#</a> 扩展方法</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">方法</th>\n<th style=\"text-align:left\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">&lt;&gt;.find()</td>\n<td style=\"text-align:left\">搜索且返回第一个结果，同 find_all () 参数</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">&lt;&gt;.find_parents()</td>\n<td style=\"text-align:left\">在先辈结点中搜索，返回列表类型，同.find_all () 参数</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">&lt;&gt;.find_parent()</td>\n<td style=\"text-align:left\">在先辈结点中返回一个结果，同.find () 参数</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">&lt;&gt;.find_next_siblings()</td>\n<td style=\"text-align:left\">在后续平行节点中搜索，返回列表类型，同.find_all () 参数</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">&lt;&gt;.find_next_sibling()</td>\n<td style=\"text-align:left\">在后续平行节点中搜索，同.find () 参数</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">&lt;&gt;.find_previous_siblings()</td>\n<td style=\"text-align:left\">在前序平行节点中搜索，返回列表类型，同.find_all () 参数</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">&lt;&gt;.find_previous_sibling()</td>\n<td style=\"text-align:left\">在前序平行节点中返回一个结果，同.find（）参数</td>\n</tr>\n</tbody>\n</table>\n",
            "tags": [
                "Python",
                "BeautifulSoup",
                "BeautifulSoup"
            ]
        },
        {
            "id": "https://github.com/ICAN1999/ICAN1999.github.io.git/%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/",
            "url": "https://github.com/ICAN1999/ICAN1999.github.io.git/%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/",
            "title": "建站日志",
            "date_published": "2020-12-14T13:25:55.969Z",
            "content_html": "<h1 id=\"2020-7-11\"><a class=\"anchor\" href=\"#2020-7-11\">#</a> 2020-7-11</h1>\n<ul>\n<li>我搭建了我的第一篇博客，用的是 typecho</li>\n</ul>\n<h1 id=\"2020-7-13\"><a class=\"anchor\" href=\"#2020-7-13\">#</a> 2020-7-13</h1>\n<ul>\n<li>博客从 typecho 转到 hexo，主题用的是 Butterfly</li>\n</ul>\n<h1 id=\"2020-7-14\"><a class=\"anchor\" href=\"#2020-7-14\">#</a> 2020-7-14</h1>\n<ul>\n<li>hexo 博客更换主题，主题改为 next，版本为 5.1.4</li>\n<li>自己开始更改 next 主题的配置，去 CSDN 和知乎上找配置方法</li>\n<li>设置文章不在首页显示功能</li>\n</ul>\n<h1 id=\"2020-7-15\"><a class=\"anchor\" href=\"#2020-7-15\">#</a> 2020-7-15</h1>\n<ul>\n<li>更改 hexo 博客各版块的透明度</li>\n<li>添加博客背景图片和网站图标</li>\n<li>更改字体大小和颜色</li>\n<li>博客部署到 github 和 gitee 上</li>\n</ul>\n<h1 id=\"2020-7-16\"><a class=\"anchor\" href=\"#2020-7-16\">#</a> 2020-7-16</h1>\n<ul>\n<li>云日历和近期文章功能</li>\n<li>联系方式和建站日志</li>\n</ul>\n<h1 id=\"2020-7-17\"><a class=\"anchor\" href=\"#2020-7-17\">#</a> 2020-7-17</h1>\n<ul>\n<li>雪花飘落特效</li>\n<li>鼠标点击字体效果</li>\n<li>浏览器网页标题恶搞</li>\n<li>设置了文章目录全部展开</li>\n<li>点击侧栏头像回到首页</li>\n<li>彩色标签</li>\n<li>添加 DaoVoice 联系</li>\n<li>点击爆炸效果</li>\n</ul>\n<h1 id=\"2020-7-18\"><a class=\"anchor\" href=\"#2020-7-18\">#</a> 2020-7-18</h1>\n<ul>\n<li>自定义鼠标样式</li>\n<li>侧边栏推荐阅读</li>\n<li>去掉了图片边框</li>\n<li>让页脚的心跳动起来</li>\n<li>解决文章摘要图片问题</li>\n<li>文章置顶功能</li>\n</ul>\n<h1 id=\"2020-7-29\"><a class=\"anchor\" href=\"#2020-7-29\">#</a> 2020-7-29</h1>\n<ul>\n<li>解决博客点击日志出现错误问题</li>\n<li>修改 pagination</li>\n</ul>\n<h1 id=\"2020-9-27\"><a class=\"anchor\" href=\"#2020-9-27\">#</a> 2020-9-27</h1>\n<ul>\n<li>更换背景图片</li>\n<li>解决近期文章链接问题</li>\n</ul>\n",
            "tags": [
                "记录"
            ]
        },
        {
            "id": "https://github.com/ICAN1999/ICAN1999.github.io.git/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/",
            "url": "https://github.com/ICAN1999/ICAN1999.github.io.git/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/",
            "title": "正则表达式",
            "date_published": "2020-12-14T13:25:55.965Z",
            "content_html": "<p>正则表达式是用来简洁地表达一组字符串的表达式，体现了一组字符串的特征。</p>\n<p><a id=\"more\"></a></p>\n<h2 id=\"正则表达式的常用操作符\"><a class=\"anchor\" href=\"#正则表达式的常用操作符\">#</a> 正则表达式的常用操作符</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">操作符</th>\n<th style=\"text-align:left\">说明</th>\n<th style=\"text-align:left\">实例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">.</td>\n<td style=\"text-align:left\">表示除换行符之外的任何单个字符</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">[]</td>\n<td style=\"text-align:left\">字符集，对单个给出取值范围</td>\n<td style=\"text-align:left\">[abc] 表示 a、b、c，[a-z] 表示 a 到 z 单个字符</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">[^ ]</td>\n<td style=\"text-align:left\">非字符集，对单个字符给出排除范围</td>\n<td style=\"text-align:left\">[^abc] 表示非 a 或 b 或 c 的单个字符</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">*</td>\n<td style=\"text-align:left\">前一个字符 0 次或无限次扩展</td>\n<td style=\"text-align:left\">abc * 表示 ab、abc、abcc、abccc 等</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">+</td>\n<td style=\"text-align:left\">前一个字符 1 次或无限次扩展</td>\n<td style=\"text-align:left\">abc + 表示 abc、abcc、abccc 等</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">?</td>\n<td style=\"text-align:left\">前一个字符 0 次或一次扩展</td>\n<td style=\"text-align:left\">abc? 表示 ab、abc</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">|</td>\n<td style=\"text-align:left\">左右表达式任意一个</td>\n<td style=\"text-align:left\">abc|def 表示 abc、def</td>\n</tr>\n<tr>\n<td style=\"text-align:left\" m=\"\"></td>\n<td style=\"text-align:left\">扩展前一个字符 m 次</td>\n<td style=\"text-align:left\">ab {2} c 表示 abbc</td>\n</tr>\n<tr>\n<td style=\"text-align:left\" m,n=\"\"></td>\n<td style=\"text-align:left\">扩展前一个字符 m 至 n 次</td>\n<td style=\"text-align:left\">ab {1,2} c 表示 abc、abbc</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">^</td>\n<td style=\"text-align:left\">匹配字符串开头</td>\n<td style=\"text-align:left\">^abc 表示 abc 且在一个字符串的开头</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$</td>\n<td style=\"text-align:left\">匹配字符串结尾</td>\n<td style=\"text-align:left\">abc$ 表示 abc 且在一个字符串的结尾</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">()</td>\n<td style=\"text-align:left\">分组标记，内部只能使用 | 操作符</td>\n<td style=\"text-align:left\">(abc) 表示 abc，(abc|def) 表示 abc、def</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\d</td>\n<td style=\"text-align:left\">数字，等价与 [0-9]</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\w</td>\n<td style=\"text-align:left\">单词字符，等价于 [A-Za-z0-9]</td>\n<td style=\"text-align:left\"></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"正则表达式语法实例\"><a class=\"anchor\" href=\"#正则表达式语法实例\">#</a> 正则表达式语法实例</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">语法</th>\n<th style=\"text-align:left\">字符串</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><sup class=\"footnote-ref\"><a href=\"#fn1\" id=\"fnref1\">[1]</a></sup>+$</td>\n<td style=\"text-align:left\">由 26 个字母组成的字符串</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><sup class=\"footnote-ref\"><a href=\"#fn2\" id=\"fnref2\">[2]</a></sup>+$</td>\n<td style=\"text-align:left\">由 26 个字母和数字组成的字符串</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">^-?\\d+$</td>\n<td style=\"text-align:left\">整数形式的字符串</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><sup class=\"footnote-ref\"><a href=\"#fn3\" id=\"fnref3\">[3]</a></sup>\\\\\\\\\\\\*[1-9][0-9]$</td>\n<td style=\"text-align:left\">正整数形式的字符串</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">[\\u4e00-\\u9fa5]</td>\n<td style=\"text-align:left\">匹配中文字符</td>\n</tr>\n<tr>\n<td style=\"text-align:left\" 7=\"\">\\d{3}-\\d{8}|\\d{4}-\\d</td>\n<td style=\"text-align:left\">国内电话号码</td>\n</tr>\n</tbody>\n</table>\n<p>更多的实例可以参考菜鸟教程</p>\n<h2 id=\"\"><a class=\"anchor\" href=\"#\">#</a> .*</h2>\n<p>. 表示 匹配除换行符 \\n 之外的任何单字符，* 表示匹配前一个字符零次或多次。所以.* 在一起就表示任意字符出现零次或多次。比如 a.*b，它就匹配以 a 开始，以 b 结束的字符串，当它找到第一个 b 的时候，如果后面还有 b，它将一直匹配下去直到以最后一个 b 结束，这种模式称为贪婪模式。</p>\n<h2 id=\"-2\"><a class=\"anchor\" href=\"#-2\">#</a> .*?</h2>\n<p>在之前的.* 加了？，就变成了懒惰模式，也就是表达式 .*? 是满足条件的情况只匹配一次，比如 a.*?b，它就匹配以 a 开始，第一个 b 结束的字符串。</p>\n<h2 id=\"-3\"><a class=\"anchor\" href=\"#-3\">#</a> .+?</h2>\n<p>.+ 表示除换行符外的字符出现一次或多次，加上了？后是满足条件的情况下只匹配一次。<br />\n比如 a.+?b，它就匹配以 a 开始，但是中间必须有字符的第一个 b 结束的字符串。</p>\n<h3 id=\"元字符\"><a class=\"anchor\" href=\"#元字符\">#</a> 元字符</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">符号</th>\n<th style=\"text-align:left\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">.</td>\n<td style=\"text-align:left\">匹配除换行符以外的任意字符</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\w</td>\n<td style=\"text-align:left\">匹配字母或数字或下划线或汉子</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\s</td>\n<td style=\"text-align:left\">匹配任意的空白符</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\d</td>\n<td style=\"text-align:left\">匹配数字</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\b</td>\n<td style=\"text-align:left\">匹配单词的开始或结束</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">^</td>\n<td style=\"text-align:left\">匹配字符串的开始</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$</td>\n<td style=\"text-align:left\">匹配字符串的结束</td>\n</tr>\n</tbody>\n</table>\n<hr class=\"footnotes-sep\" />\n<section class=\"footnotes\">\n<ol class=\"footnotes-list\">\n<li id=\"fn1\" class=\"footnote-item\"><p>A-Za-z <a href=\"#fnref1\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn2\" class=\"footnote-item\"><p>A-Za-z0-9 <a href=\"#fnref2\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn3\" class=\"footnote-item\"><p>0-9 <a href=\"#fnref3\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n</ol>\n</section>\n",
            "tags": [
                "正则表达式"
            ]
        },
        {
            "id": "https://github.com/ICAN1999/ICAN1999.github.io.git/%E5%AD%A6%E7%94%9F%E6%88%90%E7%BB%A9%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/",
            "url": "https://github.com/ICAN1999/ICAN1999.github.io.git/%E5%AD%A6%E7%94%9F%E6%88%90%E7%BB%A9%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/",
            "title": "学生成绩管理系统",
            "date_published": "2020-12-14T13:25:55.962Z",
            "content_html": "<p>自己学完 Python 后，写了一个简单学生成绩管理系统。</p>\n<p><a id=\"more\"></a></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>string1 <span class=\"token operator\">=</span> <span class=\"token string\">\"\\t&#123;0[0]:^10&#125;\\t&#123;0[1]:^10&#125;\\t&#123;0[2]:^10&#125;\\t&#123;0[3]:^10&#125;\\t&#123;0[4]:^10&#125;\\t&#123;0[5]:^10&#125;\\t&#123;0[6]:^10&#125;\\t&#123;0[7]:^10&#125;\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>string2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"姓名\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"年龄\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"性别\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"学号\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"数学\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"英语\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"语文\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"总分\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>string3 <span class=\"token operator\">=</span> <span class=\"token string\">\"\\t&#123;:^10&#125;\\t&#123;:^10&#125;\\t&#123;:^10&#125;\\t&#123;:^10&#125;\\t&#123;:^10&#125;\\t&#123;:^10&#125;\\t&#123;:^10&#125;\\t&#123;:^10&#125;\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Student</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        self<span class=\"token punctuation\">.</span>students <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token decorator annotation punctuation\">@staticmethod</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">choice_menu</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-\"</span> <span class=\"token operator\">*</span> <span class=\"token number\">50</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\\t\\t学生成绩管理系统\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\\t\\t1、添加学生信息\"</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>              <span class=\"token string\">\"\\n\\t\\t2、删除学生信息\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\\t\\t3、修改学生信息\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\\t\\t4、查找学生信息\"</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>              <span class=\"token string\">\"\\n\\t\\t5、显示学生信息\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\\t\\t6、科目成绩信息\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\\t\\t7、排序学生成绩\"</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>              <span class=\"token string\">\"\\n\\t\\t8、退出程序\\n\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"-\"</span> <span class=\"token operator\">*</span> <span class=\"token number\">50</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>              <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">add_student</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        student <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        name <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入学生姓名：\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        student<span class=\"token punctuation\">[</span><span class=\"token string\">'姓名'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> name</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        age <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入学生年龄：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        student<span class=\"token punctuation\">[</span><span class=\"token string\">'年龄'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> age</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        sex <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入学生性别：\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        student<span class=\"token punctuation\">[</span><span class=\"token string\">'性别'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> sex</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        num <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入学生学号：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token keyword\">for</span> stu <span class=\"token keyword\">in</span> self<span class=\"token punctuation\">.</span>students<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token keyword\">while</span> num <span class=\"token operator\">==</span> stu<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"学号\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"已有该学号!\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                num <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入学生学号：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        student<span class=\"token punctuation\">[</span><span class=\"token string\">'学号'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> num</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        math <span class=\"token operator\">=</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入学生数学成绩：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        student<span class=\"token punctuation\">[</span><span class=\"token string\">'数学'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> math</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        english <span class=\"token operator\">=</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入学生英语成绩：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        student<span class=\"token punctuation\">[</span><span class=\"token string\">'英语'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> english</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        chinese <span class=\"token operator\">=</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入学生语文成绩：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        student<span class=\"token punctuation\">[</span><span class=\"token string\">'语文'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> chinese</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        student<span class=\"token punctuation\">[</span><span class=\"token string\">'总分'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> math <span class=\"token operator\">+</span> english <span class=\"token operator\">+</span> chinese</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        self<span class=\"token punctuation\">.</span>students<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>student<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">delete_student</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        flag <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        name <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入要删除的学生姓名：\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token keyword\">for</span> student <span class=\"token keyword\">in</span> self<span class=\"token punctuation\">.</span>students<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            <span class=\"token keyword\">if</span> name <span class=\"token operator\">==</span> student<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"姓名\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>                self<span class=\"token punctuation\">.</span>students<span class=\"token punctuation\">.</span>remove<span class=\"token punctuation\">(</span>student<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"删除成功！\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>                flag <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token keyword\">if</span> flag <span class=\"token keyword\">is</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"没有该学生信息！\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">modify_student</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        flag <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        name <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入要修改的学生姓名：\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token keyword\">for</span> student <span class=\"token keyword\">in</span> self<span class=\"token punctuation\">.</span>students<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>            <span class=\"token keyword\">if</span> name <span class=\"token operator\">==</span> student<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'姓名'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>                command <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入要修改的信息（如姓名、年龄、学号、数学、英语、语文）：\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>                <span class=\"token keyword\">if</span> command <span class=\"token operator\">==</span> <span class=\"token string\">'姓名'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>                    new_name <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入新的姓名：\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>                    student<span class=\"token punctuation\">[</span><span class=\"token string\">'姓名'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> new_name</pre></td></tr><tr><td data-num=\"61\"></td><td><pre>                <span class=\"token keyword\">elif</span> command <span class=\"token operator\">==</span> <span class=\"token string\">'年龄'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>                    new_age <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入新的年龄：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>                    student<span class=\"token punctuation\">[</span><span class=\"token string\">'年龄'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> new_age</pre></td></tr><tr><td data-num=\"64\"></td><td><pre>                <span class=\"token keyword\">elif</span> command <span class=\"token operator\">==</span> <span class=\"token string\">'学号'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>                    new_num <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入新的学号：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>                    student<span class=\"token punctuation\">[</span><span class=\"token string\">'学号'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> new_num</pre></td></tr><tr><td data-num=\"67\"></td><td><pre>                <span class=\"token keyword\">elif</span> command <span class=\"token operator\">==</span> <span class=\"token string\">'数学'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>                    new_math <span class=\"token operator\">=</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入新的数学成绩：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>                    student<span class=\"token punctuation\">[</span><span class=\"token string\">'数学'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> new_math</pre></td></tr><tr><td data-num=\"70\"></td><td><pre>                <span class=\"token keyword\">elif</span> command <span class=\"token operator\">==</span> <span class=\"token string\">'英语'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>                    new_english <span class=\"token operator\">=</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入新的英语成绩：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>                    student<span class=\"token punctuation\">[</span><span class=\"token string\">'英语'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> new_english</pre></td></tr><tr><td data-num=\"73\"></td><td><pre>                <span class=\"token keyword\">elif</span> command <span class=\"token operator\">==</span> <span class=\"token string\">'语文'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>                    new_chinese <span class=\"token operator\">=</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入新的语文成绩：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>                    student<span class=\"token punctuation\">[</span><span class=\"token string\">'语文'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> new_chinese</pre></td></tr><tr><td data-num=\"76\"></td><td><pre>                <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>                    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入正确的信息！\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>                student<span class=\"token punctuation\">[</span><span class=\"token string\">'总分'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> student<span class=\"token punctuation\">[</span><span class=\"token string\">'语文'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> student<span class=\"token punctuation\">[</span><span class=\"token string\">'数学'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> student<span class=\"token punctuation\">[</span><span class=\"token string\">'英语'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>                flag <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>        <span class=\"token keyword\">if</span> flag <span class=\"token keyword\">is</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"没有该学生信息！\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">find_student</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>        name <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入要查找的学生姓名：\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>        flag <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>        <span class=\"token keyword\">for</span> student <span class=\"token keyword\">in</span> self<span class=\"token punctuation\">.</span>students<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>            <span class=\"token keyword\">if</span> name <span class=\"token operator\">==</span> student<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"姓名\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-\"</span> <span class=\"token operator\">*</span> <span class=\"token number\">130</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span> <span class=\"token operator\">+</span> string1<span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>string2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>string3<span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>student<span class=\"token punctuation\">[</span><span class=\"token string\">'姓名'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> student<span class=\"token punctuation\">[</span><span class=\"token string\">'年龄'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> student<span class=\"token punctuation\">[</span><span class=\"token string\">'性别'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> student<span class=\"token punctuation\">[</span><span class=\"token string\">'学号'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>                                     student<span class=\"token punctuation\">[</span><span class=\"token string\">'数学'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> student<span class=\"token punctuation\">[</span><span class=\"token string\">'英语'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> student<span class=\"token punctuation\">[</span><span class=\"token string\">'语文'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> student<span class=\"token punctuation\">[</span><span class=\"token string\">'总分'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>                      <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-\"</span> <span class=\"token operator\">*</span> <span class=\"token number\">130</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>                flag <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>        <span class=\"token keyword\">if</span> flag <span class=\"token keyword\">is</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"没有该学生信息！\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">show_student</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-\"</span> <span class=\"token operator\">*</span> <span class=\"token number\">130</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span> <span class=\"token operator\">+</span> string1<span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>string2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>        <span class=\"token keyword\">for</span> student <span class=\"token keyword\">in</span> self<span class=\"token punctuation\">.</span>students<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>string3<span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>student<span class=\"token punctuation\">[</span><span class=\"token string\">'姓名'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> student<span class=\"token punctuation\">[</span><span class=\"token string\">'年龄'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> student<span class=\"token punctuation\">[</span><span class=\"token string\">'性别'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> student<span class=\"token punctuation\">[</span><span class=\"token string\">'学号'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>                                 student<span class=\"token punctuation\">[</span><span class=\"token string\">'数学'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> student<span class=\"token punctuation\">[</span><span class=\"token string\">'英语'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> student<span class=\"token punctuation\">[</span><span class=\"token string\">'语文'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> student<span class=\"token punctuation\">[</span><span class=\"token string\">'总分'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>                  <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-\"</span> <span class=\"token operator\">*</span> <span class=\"token number\">130</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">calculate_student</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>        list1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>        command <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请选择查看哪门科目（如语文、数学、英语）：\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>        <span class=\"token keyword\">if</span> command <span class=\"token operator\">==</span> <span class=\"token string\">'语文'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>            <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>students<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>                list1<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>students<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>command<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"语文总分为：%.2f\"</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>list1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"语文平均分为：%.2f\"</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>list1<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>students<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>        <span class=\"token keyword\">elif</span> command <span class=\"token operator\">==</span> <span class=\"token string\">'数学'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>            <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>students<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>                list1<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>students<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>command<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"数学总分为：%.2f\"</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>list1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"数学平均分为：%.2f\"</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>list1<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>students<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>        <span class=\"token keyword\">elif</span> command <span class=\"token operator\">==</span> <span class=\"token string\">'英语'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>            <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>students<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>                list1<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>students<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>command<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"英语总分为：%.2f\"</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>list1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"英语平均分为：%.2f\"</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>list1<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>students<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入正确的文字！\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">sort_student</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>        list1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>        <span class=\"token keyword\">for</span> student <span class=\"token keyword\">in</span> self<span class=\"token punctuation\">.</span>students<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>            list1<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>student<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>        list2 <span class=\"token operator\">=</span> <span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span>list1<span class=\"token punctuation\">,</span> key<span class=\"token operator\">=</span><span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">:</span> x<span class=\"token punctuation\">[</span><span class=\"token string\">'总分'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> reverse<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-\"</span> <span class=\"token operator\">*</span> <span class=\"token number\">130</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span> <span class=\"token operator\">+</span> string1<span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>string2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>list2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>string3<span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>list2<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'姓名'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> list2<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'年龄'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> list2<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'性别'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> list2<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'学号'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>                                 list2<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'数学'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> list2<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'英语'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> list2<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'语文'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> list2<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'总分'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>                  <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-\"</span> <span class=\"token operator\">*</span> <span class=\"token number\">130</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>        self<span class=\"token punctuation\">.</span>choice_menu<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>            command <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入选择：\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>            <span class=\"token keyword\">if</span> command <span class=\"token operator\">==</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>                self<span class=\"token punctuation\">.</span>add_student<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>            <span class=\"token keyword\">elif</span> command <span class=\"token operator\">==</span> <span class=\"token string\">'2'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>                self<span class=\"token punctuation\">.</span>delete_student<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>            <span class=\"token keyword\">elif</span> command <span class=\"token operator\">==</span> <span class=\"token string\">'3'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>                self<span class=\"token punctuation\">.</span>modify_student<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>            <span class=\"token keyword\">elif</span> command <span class=\"token operator\">==</span> <span class=\"token string\">'4'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>                self<span class=\"token punctuation\">.</span>find_student<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>            <span class=\"token keyword\">elif</span> command <span class=\"token operator\">==</span> <span class=\"token string\">'5'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>                self<span class=\"token punctuation\">.</span>show_student<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>            <span class=\"token keyword\">elif</span> command <span class=\"token operator\">==</span> <span class=\"token string\">'6'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>                self<span class=\"token punctuation\">.</span>calculate_student<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>            <span class=\"token keyword\">elif</span> command <span class=\"token operator\">==</span> <span class=\"token string\">'7'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>                self<span class=\"token punctuation\">.</span>sort_student<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>            <span class=\"token keyword\">elif</span> command <span class=\"token operator\">==</span> <span class=\"token string\">'8'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>                <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre></pre></td></tr><tr><td data-num=\"159\"></td><td><pre></pre></td></tr><tr><td data-num=\"160\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>    Student<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "Python",
                "经典案例",
                "Python"
            ]
        },
        {
            "id": "https://github.com/ICAN1999/ICAN1999.github.io.git/crawler/%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%E7%9A%84%E7%9A%84%E2%80%9C%E2%80%9C%E7%9B%97%E4%BA%A6%E6%9C%89%E9%81%93%E2%80%9D/",
            "url": "https://github.com/ICAN1999/ICAN1999.github.io.git/crawler/%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%E7%9A%84%E7%9A%84%E2%80%9C%E2%80%9C%E7%9B%97%E4%BA%A6%E6%9C%89%E9%81%93%E2%80%9D/",
            "title": "网络爬虫的的“盗亦有道”",
            "date_published": "2020-12-14T13:25:55.955Z",
            "content_html": "<p>我们来简单地谈谈网络爬虫引发的问题。</p>\n<p><a id=\"more\"></a></p>\n<h2 id=\"网络爬虫引发的问题\"><a class=\"anchor\" href=\"#网络爬虫引发的问题\">#</a> 网络爬虫引发的问题</h2>\n<p>1、爬虫对网站来讲，就像一个骚扰电话一样，对服务器进行骚扰功能。因为 web 服务器默认只接受人类的访问，而爬虫所不同的是，它能利用计算机的快速功能来获取相关的资源，它爬取的速度比人类要快到百倍甚至千倍。服务器按照人数来约定它的访问能力，但是有爬虫来爬取内容甚至一秒钟爬取几万字的情况下，服务器是很难提供那么高的性能的。因为编写者的水平和目的，网络爬虫会给服务器带来巨大的的资源开销，对网站的运行者来，爬虫形成了骚扰。<br />\n2、由于服务器上的数据是有产权归属的，如果网络爬虫获取数据后用来牟利的话，它将会带来法律风险。<br />\n3、网络爬虫具备突破简单访问控制的能力，获取被保护数据从而泄露个人隐私。<br />\n在实际的使用中，一些较大的网站都对网络爬虫有相关的限制，而整个 Internet 已经将网络爬虫作为一个可规范的功能来看待。那对于一般的服务器来讲，我们有两种方法来限制网络爬虫，网站的所有者可以通过来源审查来限制网络爬虫。</p>\n<ul>\n<li>来源审查：判断 User-Agent<br />\n 检查来访 HTTP 协议头的 User-Agent 字段，只响应浏览器或友好爬虫的访问</li>\n</ul>\n<h2 id=\"robots-协议\"><a class=\"anchor\" href=\"#robots-协议\">#</a> Robots 协议</h2>\n<p>它的全称是网络爬虫排除标准，作用是告知所有爬虫网站的爬取策略，哪些能爬取和哪些不能爬取，要求爬虫遵守，这个文件是网站的根目录下的 robots.txt 文件<br />\n京东的 robots 协议</p>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>User-agent: <span class=\"token italic\"><span class=\"token punctuation\">*</span><span class=\"token content\"></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Disallow: /?</span><span class=\"token punctuation\">*</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Disallow: /pop/<span class=\"token italic\"><span class=\"token punctuation\">*</span><span class=\"token content\">.html</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Disallow: /pinpai/</span><span class=\"token punctuation\">*</span></span>.html?*</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>User-agent: EtaoSpider</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>Disallow: /</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>User-agent: HuihuiSpider</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>Disallow: /</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>User-agent: GwdangSpider</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>Disallow: /</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>User-agent: WochachaSpider</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>Disallow: /</pre></td></tr></table></figure><p>#代表注释，* 代表所有，/ 代表根目录</p>\n<h2 id=\"robots-协议的遵守方式\"><a class=\"anchor\" href=\"#robots-协议的遵守方式\">#</a> Robots 协议的遵守方式</h2>\n<p>对于网络爬虫来讲，它应该能自动或者人工识别 robots.txt，然后再根据文件的内容进行内容爬取。网络爬虫可以不遵守，但存在法律风险。</p>\n",
            "tags": [
                "爬虫",
                "爬虫"
            ]
        },
        {
            "id": "https://github.com/ICAN1999/ICAN1999.github.io.git/data-structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/",
            "url": "https://github.com/ICAN1999/ICAN1999.github.io.git/data-structure/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/",
            "title": "C++压缩软件",
            "date_published": "2020-12-14T13:19:13.052Z",
            "content_html": "<ul>\n<li>任务：利用哈夫曼算法将文件进行编码和解码。<a id=\"more\"></a></li>\n<li>要求：准备一个文件，统计该文件中各种字符的频率，对各字符进行 Huffman 编码，将该文件翻译成 Huffman 编码文件，再将 Huffman 编码文件翻译成源文件。</li>\n</ul>\n<h1 id=\"问题分析\"><a class=\"anchor\" href=\"#问题分析\">#</a> 问题分析</h1>\n<ul>\n<li>记录文件中出现的字符</li>\n<li>统计文件中字符出现的个数（权值）</li>\n<li>创建哈夫曼树</li>\n<li>对每个字符进行编码</li>\n<li>将源文件翻译成哈夫曼编码文件</li>\n<li>再哈夫曼编码文件解码成源文件</li>\n</ul>\n<h1 id=\"结构体设计\"><a class=\"anchor\" href=\"#结构体设计\">#</a> 结构体设计</h1>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span>  <span class=\"token comment\">// 哈夫曼树结点</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">char</span> letter<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 叶子结点字符</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>code<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 存放叶子结点编码</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">int</span> weight<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 权值</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">int</span> parent<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 双亲结点</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">int</span> lchild<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 左子结点</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">int</span> rchild<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 右子结点</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span> HTNode<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>HuffmanTree<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">struct</span> <span class=\"token class-name\">word</span>  <span class=\"token comment\">// 记录每个字符以及字符出现的次数</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">char</span> str<span class=\"token punctuation\">;</span>          <span class=\"token comment\">// 字符</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">int</span> num<span class=\"token punctuation\">;</span>           <span class=\"token comment\">// 次数</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">struct</span> <span class=\"token class-name\">word</span> <span class=\"token operator\">*</span>next<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 指向下一个</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h1 id=\"使用的头文件以及全局变量\"><a class=\"anchor\" href=\"#使用的头文件以及全局变量\">#</a> 使用的头文件以及全局变量</h1>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token expression\">M <span class=\"token number\">1000</span></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>a<span class=\"token punctuation\">[</span>M<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\">// 存放内容的哈夫曼编码</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">int</span> b<span class=\"token punctuation\">;</span>            <span class=\"token comment\">// 所有字符的哈夫曼编码个数</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>char_nums<span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 装每个字符出现的次数，也就是权值</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>zif<span class=\"token punctuation\">;</span>        <span class=\"token comment\">// 文件中不重复的字符</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">int</span> words <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 文件中所有字符的个数</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">int</span> leaf <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 叶子结点的个数</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">char</span> contents<span class=\"token punctuation\">[</span>M<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 文件中所有的内容</span></pre></td></tr></table></figure><h1 id=\"功能设计\"><a class=\"anchor\" href=\"#功能设计\">#</a> 功能设计</h1>\n<h2 id=\"程序模块\"><a class=\"anchor\" href=\"#程序模块\">#</a> 程序模块</h2>\n<ul>\n<li>从源文件读取信息 ReadSourceFile ();</li>\n<li>创建哈夫曼树 CreateHuffmanTree (HuffmanTree &amp;HT, int n);</li>\n<li>选择两棵 parent 为 0 且权值最小的子树，根结点分别为 s1 和 s2，SELECT (HuffmanTree &amp;HT, int n, int &amp;s1, int &amp;s2)</li>\n<li>将源文件转换成哈夫曼编码 TranslateSourceFile (HuffmanTree &amp;HT, int n)</li>\n</ul>\n<h2 id=\"源文件内容\"><a class=\"anchor\" href=\"#源文件内容\">#</a> 源文件内容</h2>\n<p>源文件的名字为 huffmansourcefile.txt, 文件的内容为：<br />\n![这里是 alt](\\images\\sourcefile.png&quot;这里是 title&quot;)</p>\n<h2 id=\"各函数算法设计\"><a class=\"anchor\" href=\"#各函数算法设计\">#</a> 各函数算法设计</h2>\n<h3 id=\"计算文件中每个字符出现的次数\"><a class=\"anchor\" href=\"#计算文件中每个字符出现的次数\">#</a> 计算文件中每个字符出现的次数</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">CalculateWords</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">word</span> <span class=\"token operator\">*</span>head<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> ch<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">struct</span> <span class=\"token class-name\">word</span> <span class=\"token operator\">*</span>p<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>q<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    p <span class=\"token operator\">=</span> head<span class=\"token punctuation\">;</span> <span class=\"token comment\">//p 重新指向 head</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>p<span class=\"token operator\">-></span>str <span class=\"token operator\">==</span> ch<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 出现相同的字符</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            p<span class=\"token operator\">-></span>num<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 字符对应的次数加一</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 退出循环读取下一个字符</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">else</span> <span class=\"token comment\">// 出现新的字符</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>p<span class=\"token operator\">-></span>next <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 前面没有相同的字符</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                q <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">word</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">word</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 创建一个新的结点</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                <span class=\"token function\">memset</span><span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">word</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>              <span class=\"token comment\">// 对结点进行初始化</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                q<span class=\"token operator\">-></span>str <span class=\"token operator\">=</span> ch<span class=\"token punctuation\">;</span>                                    <span class=\"token comment\">// 新的字符</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                q<span class=\"token operator\">-></span>num <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>                                     <span class=\"token comment\">// 新的字符个数为 1</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                p<span class=\"token operator\">-></span>next <span class=\"token operator\">=</span> q<span class=\"token punctuation\">;</span>                                    <span class=\"token comment\">// 将新的字符添加到链表后面</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token keyword\">else</span> <span class=\"token comment\">// 指向下一个字符</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                p <span class=\"token operator\">=</span> p<span class=\"token operator\">-></span>next<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>每次从文件中读取一个字符，然后再存入 word 结构体中。定义指针 p 指向 head，如果出现相同的字符就在出现的次数上 num 加一，然后 break 退出循环读取下一个字符；如果没有出现相同的字符，就一直 p=p-&gt;next 遍历当前链表直到 p-&gt;next==NULL，也就是当前的链表所有结点都没有该字符，我们就得开辟一个新的结点 q，并用 memset 函数对 q 结点进行初始化，然后 q-&gt;str=ch;q-&gt;num=1;p-&gt;next=q; 插入到链表的末尾，最后 break 退出循环再读取下一个字符。</p>\n<h3 id=\"从源文件读取信息\"><a class=\"anchor\" href=\"#从源文件读取信息\">#</a> 从源文件读取信息</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">ReadSourceFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    FILE <span class=\"token operator\">*</span>fp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">char</span> ch<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">struct</span> <span class=\"token class-name\">word</span> <span class=\"token operator\">*</span>head<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>p<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">int</span> front <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 不重复字符的个数</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    head <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">word</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">word</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token function\">memset</span><span class=\"token punctuation\">(</span>head<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">word</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 对 head 头指针初始化</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token comment\">/* 获取文件内容并将内容写入 contents，words 记录字符个数 */</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>fp <span class=\"token operator\">=</span> <span class=\"token function\">fopen</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sourcefile.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 打开文件</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"open file failed!\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token function\">fscanf</span><span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">,</span> <span class=\"token string\">\"%c\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>contents<span class=\"token punctuation\">[</span>words<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token constant\">EOF</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        words<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token function\">fclose</span><span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token comment\">/* 计算文件内每个字符出现的次数 */</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>fp <span class=\"token operator\">=</span> <span class=\"token function\">fopen</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sourcefile.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 打开文件</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"open file failed!\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>ch <span class=\"token operator\">=</span> <span class=\"token function\">fgetc</span><span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token constant\">EOF</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 从文件中一个个读取字符</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token function\">CalculateWords</span><span class=\"token punctuation\">(</span>head<span class=\"token punctuation\">,</span> ch<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token function\">fclose</span><span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"File read successfully............\\n\"</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>         <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Character and Weights of Character\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    char_nums <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span>words<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 根据文件中的所有字符开辟</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    zif <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">char</span><span class=\"token punctuation\">[</span>words<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// 根据文件中的所有字符个数开辟</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">=</span> head<span class=\"token operator\">-></span>next<span class=\"token punctuation\">;</span> p <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span> p <span class=\"token operator\">=</span> p<span class=\"token operator\">-></span>next<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Character:%c, Weight:%d\\n\"</span><span class=\"token punctuation\">,</span> p<span class=\"token operator\">-></span>str<span class=\"token punctuation\">,</span> p<span class=\"token operator\">-></span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        zif<span class=\"token punctuation\">[</span><span class=\"token operator\">++</span>front<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> p<span class=\"token operator\">-></span>str<span class=\"token punctuation\">;</span>      <span class=\"token comment\">// 出现的字符存入数组</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        char_nums<span class=\"token punctuation\">[</span><span class=\"token operator\">++</span>leaf<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> p<span class=\"token operator\">-></span>num<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 每个字符的次数 (权值) 存入数组</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>定义记录文件中字符及字符个数的结构体指针 head，用 memset 对 head 头指针进行初始化。<br />\n第一次使用 fopen 函数打开文件，在 while 循环下通过 fscanf 函数将文件中的字符一个个地读入 contents 数组，直到文件结束也就是等于 EOF（文件结束的标志），并且通过全局变量 words 统计文件中所有字符的总个数，关闭文件。<br />\n第二次使用 fopen 函数打开文件，通过 fgetc 一个个地读取文件中字符，将读取到的字符赋值 char 型变量 ch，再通过 CalculateWords () 函数将字符存入 word 结构体中，就这样使用 while 循环可以读取文件中的所有字符。<br />\n用 new 开辟以 words 为长度的数组，分别 char_nums 和 zif 指向它们。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">=</span> head<span class=\"token operator\">-></span>next<span class=\"token punctuation\">;</span> p <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span> p <span class=\"token operator\">=</span> p<span class=\"token operator\">-></span>next<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Character:%c, Weight:%d\\n\"</span><span class=\"token punctuation\">,</span> p<span class=\"token operator\">-></span>str<span class=\"token punctuation\">,</span> p<span class=\"token operator\">-></span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        zif<span class=\"token punctuation\">[</span><span class=\"token operator\">++</span>front<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> p<span class=\"token operator\">-></span>str<span class=\"token punctuation\">;</span>      <span class=\"token comment\">// 出现的字符存入数组</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        char_nums<span class=\"token punctuation\">[</span><span class=\"token operator\">++</span>leaf<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> p<span class=\"token operator\">-></span>num<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 每个字符的次数 (权值) 存入数组</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>在这个循环下打印出文件中出现的字符 str 以及字符次数 num，并且出现的不重复字符存入 zif 数组中，front 来统计不重复字符的个数，同理每个字符的次数（权值）存入 char_nums 数组，leaf 来统计 char_nums 数组元素个数也就是叶子结点个数。</p>\n<h3 id=\"选择两棵parent为0且权值最小的子树根结点分别为s1和s2\"><a class=\"anchor\" href=\"#选择两棵parent为0且权值最小的子树根结点分别为s1和s2\">#</a> 选择两棵 parent 为 0 且权值最小的子树，根结点分别为 s1 和 s2</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">SELECT</span><span class=\"token punctuation\">(</span>HuffmanTree <span class=\"token operator\">&amp;</span>HT<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">&amp;</span>s1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">&amp;</span>s2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">int</span> min_num<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 保存权值最小的根结点</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">/* 找到第一个权值最小的根结点 */</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>HT<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>parent <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//parent 为 0</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            min_num <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>HT<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>parent <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>HT<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>weight <span class=\"token operator\">&lt;</span> HT<span class=\"token punctuation\">[</span>min_num<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>weight<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                min_num <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    s1 <span class=\"token operator\">=</span> min_num<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token comment\">/* 找到第二权值最小的根结点 */</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>HT<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>parent <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> i <span class=\"token operator\">!=</span> s1<span class=\"token punctuation\">)</span> <span class=\"token comment\">//parent 为 0 且 i!=s1</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            min_num <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>HT<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>parent <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> i <span class=\"token operator\">!=</span> s1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>HT<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>weight <span class=\"token operator\">&lt;</span> HT<span class=\"token punctuation\">[</span>min_num<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>weight<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                min_num <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    s2 <span class=\"token operator\">=</span> min_num<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"创建哈夫曼树\"><a class=\"anchor\" href=\"#创建哈夫曼树\">#</a> 创建哈夫曼树</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">CreateHuffmanTree</span><span class=\"token punctuation\">(</span>HuffmanTree <span class=\"token operator\">&amp;</span>HT<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> t<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> w<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">int</span> s1<span class=\"token punctuation\">,</span> s2<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">int</span> m <span class=\"token operator\">=</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>           <span class=\"token comment\">// 总结点为度为 2 的结点加上度为 0 的结点</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    HT <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> HTNode<span class=\"token punctuation\">[</span>m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>          <span class=\"token comment\">// 长度为 m+1 的结构体数组</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 叶子结点初始化</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        HT<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>letter <span class=\"token operator\">=</span> t<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        HT<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>weight <span class=\"token operator\">=</span> w<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        HT<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>parent <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        HT<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>lchild <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        HT<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>rchild <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> n <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> m<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 非叶子结点初始化</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        HT<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>letter <span class=\"token operator\">=</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        HT<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>weight <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        HT<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>parent <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        HT<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>lchild <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        HT<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>rchild <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> n <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> m<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 创建哈夫曼表</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token function\">SELECT</span><span class=\"token punctuation\">(</span>HT<span class=\"token punctuation\">,</span> i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> s1<span class=\"token punctuation\">,</span> s2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        HT<span class=\"token punctuation\">[</span>s1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>parent <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span>                            <span class=\"token comment\">// 第 i 个结点为 s1 结点的双亲</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        HT<span class=\"token punctuation\">[</span>s2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>parent <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span>                            <span class=\"token comment\">// 第 i 个结点为 s2 结点的双亲</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        HT<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>lchild <span class=\"token operator\">=</span> s1<span class=\"token punctuation\">;</span>                            <span class=\"token comment\">// 第 i 个结点的左孩子为 s1</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        HT<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>rchild <span class=\"token operator\">=</span> s2<span class=\"token punctuation\">;</span>                            <span class=\"token comment\">// 第 i 个结点的右孩子为 s2</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        HT<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>weight <span class=\"token operator\">=</span> HT<span class=\"token punctuation\">[</span>s1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>weight <span class=\"token operator\">+</span> HT<span class=\"token punctuation\">[</span>s2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>weight<span class=\"token punctuation\">;</span> <span class=\"token comment\">//s1 和 s2 的权值和等于双亲结点的权值</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"将源文件转换成哈夫曼编码文件\"><a class=\"anchor\" href=\"#将源文件转换成哈夫曼编码文件\">#</a> 将源文件转换成哈夫曼编码文件</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">TranslateSourceFile</span><span class=\"token punctuation\">(</span>HuffmanTree <span class=\"token operator\">&amp;</span>HT<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    FILE <span class=\"token operator\">*</span>fp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>fp <span class=\"token operator\">=</span> <span class=\"token function\">fopen</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"huffmanfile.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"a\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"open file failed!\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"The code corresponding to each character:\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>code <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">char</span><span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 为哈弗曼编码动态分配空间</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    code<span class=\"token punctuation\">[</span>n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'\\0'</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\">// 如：3 个结点编码最长为 2。cd [3-1] = '\\0';</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">int</span> start<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> f<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        start <span class=\"token operator\">=</span> n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>c <span class=\"token operator\">=</span> i<span class=\"token punctuation\">,</span> f <span class=\"token operator\">=</span> HT<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>parent<span class=\"token punctuation\">;</span> f <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> c <span class=\"token operator\">=</span> f<span class=\"token punctuation\">,</span> f <span class=\"token operator\">=</span> HT<span class=\"token punctuation\">[</span>f<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>parent<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 从叶子到根结点逆向求编码</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>HT<span class=\"token punctuation\">[</span>f<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>lchild <span class=\"token operator\">==</span> c<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                code<span class=\"token punctuation\">[</span><span class=\"token operator\">--</span>start<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                code<span class=\"token punctuation\">[</span><span class=\"token operator\">--</span>start<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token comment\">// 为第 i 个字符分配编码空间</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        HT<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>code <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">char</span><span class=\"token punctuation\">[</span>n <span class=\"token operator\">-</span> start<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token comment\">// 将当前求出结点的哈弗曼编码复制到叶子结点编码中</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token function\">strcpy</span><span class=\"token punctuation\">(</span>HT<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>code<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>code<span class=\"token punctuation\">[</span>start<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        cout <span class=\"token operator\">&lt;&lt;</span> HT<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>letter <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\":\"</span> <span class=\"token operator\">&lt;&lt;</span> HT<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>code <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token comment\">// 对文件中的内容进行编码</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"File encoding succeeded............\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> words<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>contents<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> HT<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>letter<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 如果内容的中字符与叶子结点字符相等</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                a<span class=\"token punctuation\">[</span><span class=\"token operator\">++</span>b<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> HT<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>code<span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 将内容的中字符相应的哈夫曼编码存入数组</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                <span class=\"token function\">fprintf</span><span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">,</span> HT<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 将内容的中字符相应的哈夫曼编码存入文件</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token function\">fclose</span><span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token function\">free</span><span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"对哈夫曼编码文件进行解码成源文件\"><a class=\"anchor\" href=\"#对哈夫曼编码文件进行解码成源文件\">#</a> 对哈夫曼编码文件进行解码成源文件</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">ReleaseHuffCode</span><span class=\"token punctuation\">(</span>HuffmanTree <span class=\"token operator\">&amp;</span>HT<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    FILE <span class=\"token operator\">*</span>fp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>fp <span class=\"token operator\">=</span> <span class=\"token function\">fopen</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"releasefile.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"a\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 打开文件</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"open file failed!\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> b<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 将内容中的每个哈夫曼编码与结构体中的每个字符的哈夫曼编码对比</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> HT<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>code<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                <span class=\"token function\">fprintf</span><span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">,</span> <span class=\"token string\">\"%c\"</span><span class=\"token punctuation\">,</span> HT<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>letter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"The file was decoded successfully............\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"主函数\"><a class=\"anchor\" href=\"#主函数\">#</a> 主函数</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    HuffmanTree HT <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token function\">ReadSourceFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token function\">CreateHuffmanTree</span><span class=\"token punctuation\">(</span>HT<span class=\"token punctuation\">,</span> zif<span class=\"token punctuation\">,</span> char_nums<span class=\"token punctuation\">,</span> leaf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token function\">TranslateSourceFile</span><span class=\"token punctuation\">(</span>HT<span class=\"token punctuation\">,</span> leaf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token function\">ReleaseHuffCode</span><span class=\"token punctuation\">(</span>HT<span class=\"token punctuation\">,</span> leaf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">delete</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> char_nums<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 释放空间</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">delete</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> zif<span class=\"token punctuation\">;</span>       <span class=\"token comment\">// 释放空间</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pause\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"结果展示\"><a class=\"anchor\" href=\"#结果展示\">#</a> 结果展示</h1>\n",
            "tags": [
                "数据结构",
                "哈夫曼应用"
            ]
        }
    ]
}